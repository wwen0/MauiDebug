//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Sas.IA.Android.Sdk {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='ContentLoadingTask']"
	[global::Android.Runtime.Register ("com/sas/ia/android/sdk/ContentLoadingTask", DoNotGenerateAcw=true)]
	public partial class ContentLoadingTask : global::Java.Lang.Object, global::Java.Lang.IRunnable {
		// Metadata.xml XPath interface reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='ContentLoadingTask.ContentLoadingListener']"
		[Register ("com/sas/ia/android/sdk/ContentLoadingTask$ContentLoadingListener", "", "Com.Sas.IA.Android.Sdk.ContentLoadingTask/IContentLoadingListenerInvoker")]
		public partial interface IContentLoadingListener : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='ContentLoadingTask.ContentLoadingListener']/method[@name='loadComplete' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
			[Register ("loadComplete", "(Ljava/lang/String;Ljava/lang/String;)V", "GetLoadComplete_Ljava_lang_String_Ljava_lang_String_Handler:Com.Sas.IA.Android.Sdk.ContentLoadingTask/IContentLoadingListenerInvoker, MauiDemoApp.Binding.Android")]
			void LoadComplete (string? p0, string? p1);

		}

		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/ContentLoadingTask$ContentLoadingListener", DoNotGenerateAcw=true)]
		internal partial class IContentLoadingListenerInvoker : global::Java.Lang.Object, IContentLoadingListener {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/ContentLoadingTask$ContentLoadingListener", typeof (IContentLoadingListenerInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IContentLoadingListener? GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IContentLoadingListener> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.sas.ia.android.sdk.ContentLoadingTask.ContentLoadingListener'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IContentLoadingListenerInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate? cb_loadComplete_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetLoadComplete_Ljava_lang_String_Ljava_lang_String_Handler ()
			{
				if (cb_loadComplete_Ljava_lang_String_Ljava_lang_String_ == null)
					cb_loadComplete_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_LoadComplete_Ljava_lang_String_Ljava_lang_String_));
				return cb_loadComplete_Ljava_lang_String_Ljava_lang_String_;
			}

			static void n_LoadComplete_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.ContentLoadingTask.IContentLoadingListener> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
				var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
				__this.LoadComplete (p0, p1);
			}
#pragma warning restore 0169

			IntPtr id_loadComplete_Ljava_lang_String_Ljava_lang_String_;
			public unsafe void LoadComplete (string? p0, string? p1)
			{
				if (id_loadComplete_Ljava_lang_String_Ljava_lang_String_ == IntPtr.Zero)
					id_loadComplete_Ljava_lang_String_Ljava_lang_String_ = JNIEnv.GetMethodID (class_ref, "loadComplete", "(Ljava/lang/String;Ljava/lang/String;)V");
				IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
				IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
				JValue* __args = stackalloc JValue [2];
				__args [0] = new JValue (native_p0);
				__args [1] = new JValue (native_p1);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_loadComplete_Ljava_lang_String_Ljava_lang_String_, __args);
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
			}

		}

		// event args for com.sas.ia.android.sdk.ContentLoadingTask.ContentLoadingListener.loadComplete
		public partial class ContentLoadingEventArgs : global::System.EventArgs {
			public ContentLoadingEventArgs (string? p0, string? p1)
			{
				this.p0 = p0;
				this.p1 = p1;
			}

			string? p0;

			public string? P0 {
				get { return p0; }
			}

			string? p1;

			public string? P1 {
				get { return p1; }
			}

		}

		[global::Android.Runtime.Register ("mono/com/sas/ia/android/sdk/ContentLoadingTask_ContentLoadingListenerImplementor")]
		internal sealed partial class IContentLoadingListenerImplementor : global::Java.Lang.Object, IContentLoadingListener {

			object? sender;

			public unsafe IContentLoadingListenerImplementor (object sender) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				const string __id = "()V";
				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;
				var h = JniPeerMembers.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (h.Handle, JniHandleOwnership.TransferLocalRef);
				JniPeerMembers.InstanceMethods.FinishCreateInstance (__id, this, null);
				this.sender = sender;
			}

			#pragma warning disable 0649
			public EventHandler<ContentLoadingEventArgs>? Handler;
			#pragma warning restore 0649

			public void LoadComplete (string? p0, string? p1)
			{
				var __h = Handler;
				if (__h != null)
					__h (sender, new ContentLoadingEventArgs (p0, p1));
			}

			internal static bool __IsEmpty (IContentLoadingListenerImplementor value)
			{
				return value.Handler == null;
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='ContentLoadingTask.Result']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/ContentLoadingTask$Result", DoNotGenerateAcw=true)]
		protected internal partial class Result : global::Java.Lang.Object {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/ContentLoadingTask$Result", typeof (Result));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected Result (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='ContentLoadingTask.Result']/constructor[@name='ContentLoadingTask.Result' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.ContentLoadingTask']]"
			[Register (".ctor", "(Lcom/sas/ia/android/sdk/ContentLoadingTask;)V", "")]
			protected unsafe Result (global::Com.Sas.IA.Android.Sdk.ContentLoadingTask? __self) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType!) + ";)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/ContentLoadingTask", typeof (ContentLoadingTask));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected ContentLoadingTask (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='ContentLoadingTask']/constructor[@name='ContentLoadingTask' and count(parameter)=3 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='com.sas.ia.android.sdk.ContentLoadingTask.ContentLoadingListener']]"
		[Register (".ctor", "(Ljava/lang/String;Ljava/lang/String;Lcom/sas/ia/android/sdk/ContentLoadingTask$ContentLoadingListener;)V", "")]
		public unsafe ContentLoadingTask (string? url, string? userAgent, global::Com.Sas.IA.Android.Sdk.ContentLoadingTask.IContentLoadingListener? @callback) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Ljava/lang/String;Ljava/lang/String;Lcom/sas/ia/android/sdk/ContentLoadingTask$ContentLoadingListener;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			IntPtr native_url = JNIEnv.NewString ((string?)url);
			IntPtr native_userAgent = JNIEnv.NewString ((string?)userAgent);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [3];
				__args [0] = new JniArgumentValue (native_url);
				__args [1] = new JniArgumentValue (native_userAgent);
				__args [2] = new JniArgumentValue ((@callback == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @callback).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_url);
				JNIEnv.DeleteLocalRef (native_userAgent);
				global::System.GC.KeepAlive (@callback);
			}
		}

		static Delegate? cb_cancel;
#pragma warning disable 0169
		static Delegate GetCancelHandler ()
		{
			if (cb_cancel == null)
				cb_cancel = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Cancel));
			return cb_cancel;
		}

		static void n_Cancel (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.ContentLoadingTask> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Cancel ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='ContentLoadingTask']/method[@name='cancel' and count(parameter)=0]"
		[Register ("cancel", "()V", "GetCancelHandler")]
		public virtual unsafe void Cancel ()
		{
			const string __id = "cancel.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_onPostExecute_Lcom_sas_ia_android_sdk_ContentLoadingTask_Result_;
#pragma warning disable 0169
		static Delegate GetOnPostExecute_Lcom_sas_ia_android_sdk_ContentLoadingTask_Result_Handler ()
		{
			if (cb_onPostExecute_Lcom_sas_ia_android_sdk_ContentLoadingTask_Result_ == null)
				cb_onPostExecute_Lcom_sas_ia_android_sdk_ContentLoadingTask_Result_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnPostExecute_Lcom_sas_ia_android_sdk_ContentLoadingTask_Result_));
			return cb_onPostExecute_Lcom_sas_ia_android_sdk_ContentLoadingTask_Result_;
		}

		static void n_OnPostExecute_Lcom_sas_ia_android_sdk_ContentLoadingTask_Result_ (IntPtr jnienv, IntPtr native__this, IntPtr native_result)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.ContentLoadingTask> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var result = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.ContentLoadingTask.Result> (native_result, JniHandleOwnership.DoNotTransfer);
			__this.OnPostExecute (result);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='ContentLoadingTask']/method[@name='onPostExecute' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.ContentLoadingTask.Result']]"
		[Register ("onPostExecute", "(Lcom/sas/ia/android/sdk/ContentLoadingTask$Result;)V", "GetOnPostExecute_Lcom_sas_ia_android_sdk_ContentLoadingTask_Result_Handler")]
		protected virtual unsafe void OnPostExecute (global::Com.Sas.IA.Android.Sdk.ContentLoadingTask.Result? result)
		{
			const string __id = "onPostExecute.(Lcom/sas/ia/android/sdk/ContentLoadingTask$Result;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((result == null) ? IntPtr.Zero : ((global::Java.Lang.Object) result).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (result);
			}
		}

		static Delegate? cb_run;
#pragma warning disable 0169
		static Delegate GetRunHandler ()
		{
			if (cb_run == null)
				cb_run = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Run));
			return cb_run;
		}

		static void n_Run (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.ContentLoadingTask> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Run ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='ContentLoadingTask']/method[@name='run' and count(parameter)=0]"
		[Register ("run", "()V", "GetRunHandler")]
		public virtual unsafe void Run ()
		{
			const string __id = "run.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

	}
}
