//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Sas.Mkt.Mobile.Sdk {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.mkt.mobile.sdk']/class[@name='JsonHandler']"
	[global::Android.Runtime.Register ("com/sas/mkt/mobile/sdk/JsonHandler", DoNotGenerateAcw=true)]
	public partial class JsonHandler : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/mkt/mobile/sdk/JsonHandler", typeof (JsonHandler));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected JsonHandler (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.sas.mkt.mobile.sdk']/class[@name='JsonHandler']/constructor[@name='JsonHandler' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe JsonHandler () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_fromJson_Ljava_io_Reader_Ljava_lang_reflect_Type_;
#pragma warning disable 0169
		static Delegate GetFromJson_Ljava_io_Reader_Ljava_lang_reflect_Type_Handler ()
		{
			if (cb_fromJson_Ljava_io_Reader_Ljava_lang_reflect_Type_ == null)
				cb_fromJson_Ljava_io_Reader_Ljava_lang_reflect_Type_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_L (n_FromJson_Ljava_io_Reader_Ljava_lang_reflect_Type_));
			return cb_fromJson_Ljava_io_Reader_Ljava_lang_reflect_Type_;
		}

		static IntPtr n_FromJson_Ljava_io_Reader_Ljava_lang_reflect_Type_ (IntPtr jnienv, IntPtr native__this, IntPtr native_reader, IntPtr native_T)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.Mkt.Mobile.Sdk.JsonHandler> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var reader = global::Java.Lang.Object.GetObject<global::Java.IO.Reader> (native_reader, JniHandleOwnership.DoNotTransfer);
			var T = (global::Java.Lang.Reflect.IType?)global::Java.Lang.Object.GetObject<global::Java.Lang.Reflect.IType> (native_T, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.FromJson (reader, T));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk']/class[@name='JsonHandler']/method[@name='fromJson' and count(parameter)=2 and parameter[1][@type='java.io.Reader'] and parameter[2][@type='java.lang.reflect.Type']]"
		[Register ("fromJson", "(Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object;", "GetFromJson_Ljava_io_Reader_Ljava_lang_reflect_Type_Handler")]
		[global::Java.Interop.JavaTypeParameters (new string [] {"T"})]
		public virtual unsafe global::Java.Lang.Object? FromJson (global::Java.IO.Reader? reader, global::Java.Lang.Reflect.IType? T)
		{
			const string __id = "fromJson.(Ljava/io/Reader;Ljava/lang/reflect/Type;)Ljava/lang/Object;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((reader == null) ? IntPtr.Zero : ((global::Java.Lang.Object) reader).Handle);
				__args [1] = new JniArgumentValue ((T == null) ? IntPtr.Zero : ((global::Java.Lang.Object) T).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Java.Lang.Object?) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (reader);
				global::System.GC.KeepAlive (T);
			}
		}

		static Delegate? cb_fromJson_Ljava_lang_String_Ljava_lang_reflect_Type_;
#pragma warning disable 0169
		static Delegate GetFromJson_Ljava_lang_String_Ljava_lang_reflect_Type_Handler ()
		{
			if (cb_fromJson_Ljava_lang_String_Ljava_lang_reflect_Type_ == null)
				cb_fromJson_Ljava_lang_String_Ljava_lang_reflect_Type_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_L (n_FromJson_Ljava_lang_String_Ljava_lang_reflect_Type_));
			return cb_fromJson_Ljava_lang_String_Ljava_lang_reflect_Type_;
		}

		static IntPtr n_FromJson_Ljava_lang_String_Ljava_lang_reflect_Type_ (IntPtr jnienv, IntPtr native__this, IntPtr native_json, IntPtr native_T)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.Mkt.Mobile.Sdk.JsonHandler> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var json = JNIEnv.GetString (native_json, JniHandleOwnership.DoNotTransfer);
			var T = (global::Java.Lang.Reflect.IType?)global::Java.Lang.Object.GetObject<global::Java.Lang.Reflect.IType> (native_T, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.ToLocalJniHandle (__this.FromJson (json, T));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk']/class[@name='JsonHandler']/method[@name='fromJson' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.reflect.Type']]"
		[Register ("fromJson", "(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;", "GetFromJson_Ljava_lang_String_Ljava_lang_reflect_Type_Handler")]
		[global::Java.Interop.JavaTypeParameters (new string [] {"T"})]
		public virtual unsafe global::Java.Lang.Object? FromJson (string? json, global::Java.Lang.Reflect.IType? T)
		{
			const string __id = "fromJson.(Ljava/lang/String;Ljava/lang/reflect/Type;)Ljava/lang/Object;";
			IntPtr native_json = JNIEnv.NewString ((string?)json);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_json);
				__args [1] = new JniArgumentValue ((T == null) ? IntPtr.Zero : ((global::Java.Lang.Object) T).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return (global::Java.Lang.Object?) global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_json);
				global::System.GC.KeepAlive (T);
			}
		}

		static Delegate? cb_toJson_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetToJson_Ljava_lang_Object_Handler ()
		{
			if (cb_toJson_Ljava_lang_Object_ == null)
				cb_toJson_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_L (n_ToJson_Ljava_lang_Object_));
			return cb_toJson_Ljava_lang_Object_;
		}

		static IntPtr n_ToJson_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_obj)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.Mkt.Mobile.Sdk.JsonHandler> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var obj = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_obj, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewString (__this.ToJson (obj));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk']/class[@name='JsonHandler']/method[@name='toJson' and count(parameter)=1 and parameter[1][@type='java.lang.Object']]"
		[Register ("toJson", "(Ljava/lang/Object;)Ljava/lang/String;", "GetToJson_Ljava_lang_Object_Handler")]
		public virtual unsafe string? ToJson (global::Java.Lang.Object? obj)
		{
			const string __id = "toJson.(Ljava/lang/Object;)Ljava/lang/String;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((obj == null) ? IntPtr.Zero : ((global::Java.Lang.Object) obj).Handle);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (obj);
			}
		}

		static Delegate? cb_toJson_Ljava_lang_Object_Ljava_io_Writer_;
#pragma warning disable 0169
		static Delegate GetToJson_Ljava_lang_Object_Ljava_io_Writer_Handler ()
		{
			if (cb_toJson_Ljava_lang_Object_Ljava_io_Writer_ == null)
				cb_toJson_Ljava_lang_Object_Ljava_io_Writer_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_ToJson_Ljava_lang_Object_Ljava_io_Writer_));
			return cb_toJson_Ljava_lang_Object_Ljava_io_Writer_;
		}

		static void n_ToJson_Ljava_lang_Object_Ljava_io_Writer_ (IntPtr jnienv, IntPtr native__this, IntPtr native_obj, IntPtr native_writer)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.Mkt.Mobile.Sdk.JsonHandler> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var obj = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_obj, JniHandleOwnership.DoNotTransfer);
			var writer = global::Java.Lang.Object.GetObject<global::Java.IO.Writer> (native_writer, JniHandleOwnership.DoNotTransfer);
			__this.ToJson (obj, writer);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk']/class[@name='JsonHandler']/method[@name='toJson' and count(parameter)=2 and parameter[1][@type='java.lang.Object'] and parameter[2][@type='java.io.Writer']]"
		[Register ("toJson", "(Ljava/lang/Object;Ljava/io/Writer;)V", "GetToJson_Ljava_lang_Object_Ljava_io_Writer_Handler")]
		public virtual unsafe void ToJson (global::Java.Lang.Object? obj, global::Java.IO.Writer? writer)
		{
			const string __id = "toJson.(Ljava/lang/Object;Ljava/io/Writer;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((obj == null) ? IntPtr.Zero : ((global::Java.Lang.Object) obj).Handle);
				__args [1] = new JniArgumentValue ((writer == null) ? IntPtr.Zero : ((global::Java.Lang.Object) writer).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (obj);
				global::System.GC.KeepAlive (writer);
			}
		}

	}
}
