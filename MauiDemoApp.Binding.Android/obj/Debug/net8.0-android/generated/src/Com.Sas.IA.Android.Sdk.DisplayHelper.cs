//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Sas.IA.Android.Sdk {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='DisplayHelper']"
	[global::Android.Runtime.Register ("com/sas/ia/android/sdk/DisplayHelper", DoNotGenerateAcw=true)]
	public partial class DisplayHelper : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/DisplayHelper", typeof (DisplayHelper));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected DisplayHelper (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='DisplayHelper']/method[@name='appRect' and count(parameter)=0]"
		[Register ("appRect", "()Landroid/graphics/Rect;", "")]
		public unsafe global::Android.Graphics.Rect? AppRect ()
		{
			const string __id = "appRect.()Landroid/graphics/Rect;";
			try {
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
				return global::Java.Lang.Object.GetObject<global::Android.Graphics.Rect> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='DisplayHelper']/method[@name='dipsToPixels' and count(parameter)=1 and parameter[1][@type='android.graphics.Rect']]"
		[Register ("dipsToPixels", "(Landroid/graphics/Rect;)Landroid/graphics/Rect;", "")]
		public unsafe global::Android.Graphics.Rect? DipsToPixels (global::Android.Graphics.Rect? rectDips)
		{
			const string __id = "dipsToPixels.(Landroid/graphics/Rect;)Landroid/graphics/Rect;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((rectDips == null) ? IntPtr.Zero : ((global::Java.Lang.Object) rectDips).Handle);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Android.Graphics.Rect> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (rectDips);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='DisplayHelper']/method[@name='dipsToPixels' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("dipsToPixels", "(I)I", "")]
		public unsafe int DipsToPixels (int dips)
		{
			const string __id = "dipsToPixels.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (dips);
				var __rm = _members.InstanceMethods.InvokeNonvirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='DisplayHelper']/method[@name='pixelsToDips' and count(parameter)=1 and parameter[1][@type='android.graphics.Rect']]"
		[Register ("pixelsToDips", "(Landroid/graphics/Rect;)Landroid/graphics/Rect;", "")]
		public unsafe global::Android.Graphics.Rect? PixelsToDips (global::Android.Graphics.Rect? rectPixels)
		{
			const string __id = "pixelsToDips.(Landroid/graphics/Rect;)Landroid/graphics/Rect;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((rectPixels == null) ? IntPtr.Zero : ((global::Java.Lang.Object) rectPixels).Handle);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Android.Graphics.Rect> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (rectPixels);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='DisplayHelper']/method[@name='pixelsToDips' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("pixelsToDips", "(I)I", "")]
		public unsafe int PixelsToDips (int pixels)
		{
			const string __id = "pixelsToDips.(I)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (pixels);
				var __rm = _members.InstanceMethods.InvokeNonvirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='DisplayHelper']/method[@name='screenRect' and count(parameter)=0]"
		[Register ("screenRect", "()Landroid/graphics/Rect;", "")]
		public unsafe global::Android.Graphics.Rect? ScreenRect ()
		{
			const string __id = "screenRect.()Landroid/graphics/Rect;";
			try {
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
				return global::Java.Lang.Object.GetObject<global::Android.Graphics.Rect> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='DisplayHelper']/method[@name='topView' and count(parameter)=0]"
		[Register ("topView", "()Landroid/view/ViewGroup;", "")]
		public unsafe global::Android.Views.ViewGroup? TopView ()
		{
			const string __id = "topView.()Landroid/view/ViewGroup;";
			try {
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, null);
				return global::Java.Lang.Object.GetObject<global::Android.Views.ViewGroup> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='DisplayHelper']/method[@name='viewRect' and count(parameter)=1 and parameter[1][@type='android.view.View']]"
		[Register ("viewRect", "(Landroid/view/View;)Landroid/graphics/Rect;", "")]
		public unsafe global::Android.Graphics.Rect? ViewRect (global::Android.Views.View? view)
		{
			const string __id = "viewRect.(Landroid/view/View;)Landroid/graphics/Rect;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((view == null) ? IntPtr.Zero : ((global::Java.Lang.Object) view).Handle);
				var __rm = _members.InstanceMethods.InvokeNonvirtualObjectMethod (__id, this, __args);
				return global::Java.Lang.Object.GetObject<global::Android.Graphics.Rect> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (view);
			}
		}

	}
}
