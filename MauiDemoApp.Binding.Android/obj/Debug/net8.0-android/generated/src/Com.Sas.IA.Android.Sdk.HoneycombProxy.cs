//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Sas.IA.Android.Sdk {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='HoneycombProxy']"
	[global::Android.Runtime.Register ("com/sas/ia/android/sdk/HoneycombProxy", DoNotGenerateAcw=true)]
	public partial class HoneycombProxy : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/HoneycombProxy", typeof (HoneycombProxy));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected HoneycombProxy (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='HoneycombProxy']/constructor[@name='HoneycombProxy' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe HoneycombProxy () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_setLoadWithOverviewMode_Landroid_webkit_WebView_;
#pragma warning disable 0169
		static Delegate GetSetLoadWithOverviewMode_Landroid_webkit_WebView_Handler ()
		{
			if (cb_setLoadWithOverviewMode_Landroid_webkit_WebView_ == null)
				cb_setLoadWithOverviewMode_Landroid_webkit_WebView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_SetLoadWithOverviewMode_Landroid_webkit_WebView_));
			return cb_setLoadWithOverviewMode_Landroid_webkit_WebView_;
		}

		static void n_SetLoadWithOverviewMode_Landroid_webkit_WebView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_view)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.HoneycombProxy> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var view = global::Java.Lang.Object.GetObject<global::Android.Webkit.WebView> (native_view, JniHandleOwnership.DoNotTransfer);
			__this.SetLoadWithOverviewMode (view);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='HoneycombProxy']/method[@name='setLoadWithOverviewMode' and count(parameter)=1 and parameter[1][@type='android.webkit.WebView']]"
		[Register ("setLoadWithOverviewMode", "(Landroid/webkit/WebView;)V", "GetSetLoadWithOverviewMode_Landroid_webkit_WebView_Handler")]
		protected virtual unsafe void SetLoadWithOverviewMode (global::Android.Webkit.WebView? view)
		{
			const string __id = "setLoadWithOverviewMode.(Landroid/webkit/WebView;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((view == null) ? IntPtr.Zero : ((global::Java.Lang.Object) view).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (view);
			}
		}

		static Delegate? cb_setViewAlpha_Landroid_view_View_F;
#pragma warning disable 0169
		static Delegate GetSetViewAlpha_Landroid_view_View_FHandler ()
		{
			if (cb_setViewAlpha_Landroid_view_View_F == null)
				cb_setViewAlpha_Landroid_view_View_F = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLF_V (n_SetViewAlpha_Landroid_view_View_F));
			return cb_setViewAlpha_Landroid_view_View_F;
		}

		static void n_SetViewAlpha_Landroid_view_View_F (IntPtr jnienv, IntPtr native__this, IntPtr native_view, float f)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.HoneycombProxy> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var view = global::Java.Lang.Object.GetObject<global::Android.Views.View> (native_view, JniHandleOwnership.DoNotTransfer);
			__this.SetViewAlpha (view, f);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='HoneycombProxy']/method[@name='setViewAlpha' and count(parameter)=2 and parameter[1][@type='android.view.View'] and parameter[2][@type='float']]"
		[Register ("setViewAlpha", "(Landroid/view/View;F)V", "GetSetViewAlpha_Landroid_view_View_FHandler")]
		protected virtual unsafe void SetViewAlpha (global::Android.Views.View? view, float f)
		{
			const string __id = "setViewAlpha.(Landroid/view/View;F)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((view == null) ? IntPtr.Zero : ((global::Java.Lang.Object) view).Handle);
				__args [1] = new JniArgumentValue (f);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (view);
			}
		}

		static Delegate? cb_showActionBar_Landroid_app_Activity_Z;
#pragma warning disable 0169
		static Delegate GetShowActionBar_Landroid_app_Activity_ZHandler ()
		{
			if (cb_showActionBar_Landroid_app_Activity_Z == null)
				cb_showActionBar_Landroid_app_Activity_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLZ_Z (n_ShowActionBar_Landroid_app_Activity_Z));
			return cb_showActionBar_Landroid_app_Activity_Z;
		}

		static bool n_ShowActionBar_Landroid_app_Activity_Z (IntPtr jnienv, IntPtr native__this, IntPtr native_activity, bool show)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.HoneycombProxy> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var activity = global::Java.Lang.Object.GetObject<global::Android.App.Activity> (native_activity, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.ShowActionBar (activity, show);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='HoneycombProxy']/method[@name='showActionBar' and count(parameter)=2 and parameter[1][@type='android.app.Activity'] and parameter[2][@type='boolean']]"
		[Register ("showActionBar", "(Landroid/app/Activity;Z)Z", "GetShowActionBar_Landroid_app_Activity_ZHandler")]
		protected virtual unsafe bool ShowActionBar (global::Android.App.Activity? activity, bool show)
		{
			const string __id = "showActionBar.(Landroid/app/Activity;Z)Z";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((activity == null) ? IntPtr.Zero : ((global::Java.Lang.Object) activity).Handle);
				__args [1] = new JniArgumentValue (show);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				global::System.GC.KeepAlive (activity);
			}
		}

	}
}
