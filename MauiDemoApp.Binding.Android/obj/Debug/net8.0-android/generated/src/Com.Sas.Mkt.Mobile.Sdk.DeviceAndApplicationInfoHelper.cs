//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Sas.Mkt.Mobile.Sdk {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.mkt.mobile.sdk']/class[@name='DeviceAndApplicationInfoHelper']"
	[global::Android.Runtime.Register ("com/sas/mkt/mobile/sdk/DeviceAndApplicationInfoHelper", DoNotGenerateAcw=true)]
	public partial class DeviceAndApplicationInfoHelper : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/mkt/mobile/sdk/DeviceAndApplicationInfoHelper", typeof (DeviceAndApplicationInfoHelper));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected DeviceAndApplicationInfoHelper (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.sas.mkt.mobile.sdk']/class[@name='DeviceAndApplicationInfoHelper']/constructor[@name='DeviceAndApplicationInfoHelper' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe DeviceAndApplicationInfoHelper () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		public static unsafe string? DevicePlatform {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk']/class[@name='DeviceAndApplicationInfoHelper']/method[@name='getDevicePlatform' and count(parameter)=0]"
			[Register ("getDevicePlatform", "()Ljava/lang/String;", "")]
			get {
				const string __id = "getDevicePlatform.()Ljava/lang/String;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk']/class[@name='DeviceAndApplicationInfoHelper']/method[@name='buildDeviceInfo' and count(parameter)=1 and parameter[1][@type='android.content.Context']]"
		[Register ("buildDeviceInfo", "(Landroid/content/Context;)Ljava/util/Map;", "")]
		public static unsafe global::System.Collections.Generic.IDictionary<string, string>? BuildDeviceInfo (global::Android.Content.Context? context)
		{
			const string __id = "buildDeviceInfo.(Landroid/content/Context;)Ljava/util/Map;";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				var __rm = _members.StaticMethods.InvokeObjectMethod (__id, __args);
				return global::Android.Runtime.JavaDictionary<string, string>.FromJniHandle (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				global::System.GC.KeepAlive (context);
			}
		}

	}
}
