//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Sas.Mkt.Mobile.Sdk.Tasks {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.mkt.mobile.sdk.tasks']/class[@name='SASCollectorExecutor']"
	[global::Android.Runtime.Register ("com/sas/mkt/mobile/sdk/tasks/SASCollectorExecutor", DoNotGenerateAcw=true)]
	public partial class SASCollectorExecutor : global::Java.Util.Concurrent.ScheduledThreadPoolExecutor, global::Java.Util.Concurrent.IRejectedExecutionHandler {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/mkt/mobile/sdk/tasks/SASCollectorExecutor", typeof (SASCollectorExecutor));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected SASCollectorExecutor (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.sas.mkt.mobile.sdk.tasks']/class[@name='SASCollectorExecutor']/constructor[@name='SASCollectorExecutor' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe SASCollectorExecutor () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_execute_Ljava_lang_Runnable_Z;
#pragma warning disable 0169
		static Delegate GetExecute_Ljava_lang_Runnable_ZHandler ()
		{
			if (cb_execute_Ljava_lang_Runnable_Z == null)
				cb_execute_Ljava_lang_Runnable_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLZ_V (n_Execute_Ljava_lang_Runnable_Z));
			return cb_execute_Ljava_lang_Runnable_Z;
		}

		static void n_Execute_Ljava_lang_Runnable_Z (IntPtr jnienv, IntPtr native__this, IntPtr native_command, bool deferForSession)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.Mkt.Mobile.Sdk.Tasks.SASCollectorExecutor> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var command = (global::Java.Lang.IRunnable?)global::Java.Lang.Object.GetObject<global::Java.Lang.IRunnable> (native_command, JniHandleOwnership.DoNotTransfer);
			__this.Execute (command, deferForSession);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk.tasks']/class[@name='SASCollectorExecutor']/method[@name='execute' and count(parameter)=2 and parameter[1][@type='java.lang.Runnable'] and parameter[2][@type='boolean']]"
		[Register ("execute", "(Ljava/lang/Runnable;Z)V", "GetExecute_Ljava_lang_Runnable_ZHandler")]
		public virtual unsafe void Execute (global::Java.Lang.IRunnable? command, bool deferForSession)
		{
			const string __id = "execute.(Ljava/lang/Runnable;Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((command == null) ? IntPtr.Zero : ((global::Java.Lang.Object) command).Handle);
				__args [1] = new JniArgumentValue (deferForSession);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (command);
			}
		}

		static Delegate? cb_rejectedExecution_Ljava_lang_Runnable_Ljava_util_concurrent_ThreadPoolExecutor_;
#pragma warning disable 0169
		static Delegate GetRejectedExecution_Ljava_lang_Runnable_Ljava_util_concurrent_ThreadPoolExecutor_Handler ()
		{
			if (cb_rejectedExecution_Ljava_lang_Runnable_Ljava_util_concurrent_ThreadPoolExecutor_ == null)
				cb_rejectedExecution_Ljava_lang_Runnable_Ljava_util_concurrent_ThreadPoolExecutor_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_RejectedExecution_Ljava_lang_Runnable_Ljava_util_concurrent_ThreadPoolExecutor_));
			return cb_rejectedExecution_Ljava_lang_Runnable_Ljava_util_concurrent_ThreadPoolExecutor_;
		}

		static void n_RejectedExecution_Ljava_lang_Runnable_Ljava_util_concurrent_ThreadPoolExecutor_ (IntPtr jnienv, IntPtr native__this, IntPtr native_r, IntPtr native_executor)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.Mkt.Mobile.Sdk.Tasks.SASCollectorExecutor> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var r = (global::Java.Lang.IRunnable?)global::Java.Lang.Object.GetObject<global::Java.Lang.IRunnable> (native_r, JniHandleOwnership.DoNotTransfer);
			var executor = global::Java.Lang.Object.GetObject<global::Java.Util.Concurrent.ThreadPoolExecutor> (native_executor, JniHandleOwnership.DoNotTransfer);
			__this.RejectedExecution (r, executor);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk.tasks']/class[@name='SASCollectorExecutor']/method[@name='rejectedExecution' and count(parameter)=2 and parameter[1][@type='java.lang.Runnable'] and parameter[2][@type='java.util.concurrent.ThreadPoolExecutor']]"
		[Register ("rejectedExecution", "(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V", "GetRejectedExecution_Ljava_lang_Runnable_Ljava_util_concurrent_ThreadPoolExecutor_Handler")]
		public virtual unsafe void RejectedExecution (global::Java.Lang.IRunnable? r, global::Java.Util.Concurrent.ThreadPoolExecutor? executor)
		{
			const string __id = "rejectedExecution.(Ljava/lang/Runnable;Ljava/util/concurrent/ThreadPoolExecutor;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((r == null) ? IntPtr.Zero : ((global::Java.Lang.Object) r).Handle);
				__args [1] = new JniArgumentValue ((executor == null) ? IntPtr.Zero : ((global::Java.Lang.Object) executor).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (r);
				global::System.GC.KeepAlive (executor);
			}
		}

	}
}
