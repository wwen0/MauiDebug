//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Sas.IA.Android.Sdk {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']"
	[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView", DoNotGenerateAcw=true)]
	public partial class MRAIDWebView : global::Android.Widget.RelativeLayout {

		// Metadata.xml XPath field reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/field[@name='displayHelper']"
		[Register ("displayHelper")]
		protected global::Com.Sas.IA.Android.Sdk.DisplayHelper? DisplayHelper {
			get {
				const string __id = "displayHelper.Lcom/sas/ia/android/sdk/DisplayHelper;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.DisplayHelper> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "displayHelper.Lcom/sas/ia/android/sdk/DisplayHelper;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/field[@name='innerHTML']"
		[Register ("innerHTML")]
		protected string? InnerHTML {
			get {
				const string __id = "innerHTML.Ljava/lang/String;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return JNIEnv.GetString (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "innerHTML.Ljava/lang/String;";

				IntPtr native_value = JNIEnv.NewString ((string?)value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/field[@name='isInterstitial']"
		[Register ("isInterstitial")]
		public bool IsInterstitial {
			get {
				const string __id = "isInterstitial.Z";

				var __v = _members.InstanceFields.GetBooleanValue (__id, this);
				return __v;
			}
			set {
				const string __id = "isInterstitial.Z";

				try {
					_members.InstanceFields.SetValue (__id, this, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/field[@name='mraidLoaded']"
		[Register ("mraidLoaded")]
		protected bool MraidLoaded {
			get {
				const string __id = "mraidLoaded.Z";

				var __v = _members.InstanceFields.GetBooleanValue (__id, this);
				return __v;
			}
			set {
				const string __id = "mraidLoaded.Z";

				try {
					_members.InstanceFields.SetValue (__id, this, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/field[@name='mraidTracing']"
		[Register ("mraidTracing")]
		public static bool MraidTracing {
			get {
				const string __id = "mraidTracing.Z";

				var __v = _members.StaticFields.GetBooleanValue (__id);
				return __v;
			}
			set {
				const string __id = "mraidTracing.Z";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/field[@name='numTraces']"
		[Register ("numTraces")]
		protected int NumTraces {
			get {
				const string __id = "numTraces.I";

				var __v = _members.InstanceFields.GetInt32Value (__id, this);
				return __v;
			}
			set {
				const string __id = "numTraces.I";

				try {
					_members.InstanceFields.SetValue (__id, this, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/field[@name='parentActivity']"
		[Register ("parentActivity")]
		protected global::Java.Lang.Ref.WeakReference? ParentActivity {
			get {
				const string __id = "parentActivity.Ljava/lang/ref/WeakReference;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Java.Lang.Object.GetObject<global::Java.Lang.Ref.WeakReference> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "parentActivity.Ljava/lang/ref/WeakReference;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/field[@name='supportCalendar']"
		[Register ("supportCalendar")]
		public static bool SupportCalendar {
			get {
				const string __id = "supportCalendar.Z";

				var __v = _members.StaticFields.GetBooleanValue (__id);
				return __v;
			}
			set {
				const string __id = "supportCalendar.Z";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/field[@name='supportPicture']"
		[Register ("supportPicture")]
		public static bool SupportPicture {
			get {
				const string __id = "supportPicture.Z";

				var __v = _members.StaticFields.GetBooleanValue (__id);
				return __v;
			}
			set {
				const string __id = "supportPicture.Z";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/field[@name='supportSMSText']"
		[Register ("supportSMSText")]
		public static bool SupportSMSText {
			get {
				const string __id = "supportSMSText.Z";

				var __v = _members.StaticFields.GetBooleanValue (__id);
				return __v;
			}
			set {
				const string __id = "supportSMSText.Z";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/field[@name='supportTelephone']"
		[Register ("supportTelephone")]
		public static bool SupportTelephone {
			get {
				const string __id = "supportTelephone.Z";

				var __v = _members.StaticFields.GetBooleanValue (__id);
				return __v;
			}
			set {
				const string __id = "supportTelephone.Z";

				try {
					_members.StaticFields.SetValue (__id, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/field[@name='uiHandler']"
		[Register ("uiHandler")]
		protected global::Android.OS.Handler? UiHandler {
			get {
				const string __id = "uiHandler.Landroid/os/Handler;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Java.Lang.Object.GetObject<global::Android.OS.Handler> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "uiHandler.Landroid/os/Handler;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/field[@name='visible']"
		[Register ("visible")]
		protected bool Visible {
			get {
				const string __id = "visible.Z";

				var __v = _members.InstanceFields.GetBooleanValue (__id, this);
				return __v;
			}
			set {
				const string __id = "visible.Z";

				try {
					_members.InstanceFields.SetValue (__id, this, value);
				} finally {
				}
			}
		}


		// Metadata.xml XPath field reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/field[@name='webView']"
		[Register ("webView")]
		protected global::Android.Webkit.WebView? WebView {
			get {
				const string __id = "webView.Landroid/webkit/WebView;";

				var __v = _members.InstanceFields.GetObjectValue (__id, this);
				return global::Java.Lang.Object.GetObject<global::Android.Webkit.WebView> (__v.Handle, JniHandleOwnership.TransferLocalRef);
			}
			set {
				const string __id = "webView.Landroid/webkit/WebView;";

				IntPtr native_value = global::Android.Runtime.JNIEnv.ToLocalJniHandle (value);
				try {
					_members.InstanceFields.SetValue (__id, this, new JniObjectReference (native_value));
				} finally {
					global::Android.Runtime.JNIEnv.DeleteLocalRef (native_value);
				}
			}
		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.BenignDelegate']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$BenignDelegate", DoNotGenerateAcw=true)]
		public partial class BenignDelegate : global::Java.Lang.Object, global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IDelegate {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$BenignDelegate", typeof (BenignDelegate));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected BenignDelegate (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.BenignDelegate']/constructor[@name='MRAIDWebView.BenignDelegate' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register (".ctor", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "")]
			public unsafe BenignDelegate (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? __self) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType!) + ";)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			static Delegate? cb_onActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_;
#pragma warning disable 0169
			static Delegate GetOnActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler ()
			{
				if (cb_onActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ == null)
					cb_onActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_));
				return cb_onActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			}

			static void n_OnActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mraidView)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.BenignDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var mraidView = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_mraidView, JniHandleOwnership.DoNotTransfer);
				__this.OnActionFinished (mraidView);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.BenignDelegate']/method[@name='onActionFinished' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register ("onActionFinished", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "GetOnActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler")]
			public virtual unsafe void OnActionFinished (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? mraidView)
			{
				const string __id = "onActionFinished.(Lcom/sas/ia/android/sdk/MRAIDWebView;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((mraidView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) mraidView).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (mraidView);
				}
			}

			static Delegate? cb_onClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_;
#pragma warning disable 0169
			static Delegate GetOnClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler ()
			{
				if (cb_onClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_ == null)
					cb_onClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_));
				return cb_onClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			}

			static void n_OnClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mraidView)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.BenignDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var mraidView = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_mraidView, JniHandleOwnership.DoNotTransfer);
				__this.OnClosed (mraidView);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.BenignDelegate']/method[@name='onClosed' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register ("onClosed", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "GetOnClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler")]
			public virtual unsafe void OnClosed (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? mraidView)
			{
				const string __id = "onClosed.(Lcom/sas/ia/android/sdk/MRAIDWebView;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((mraidView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) mraidView).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (mraidView);
				}
			}

			static Delegate? cb_onExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_;
#pragma warning disable 0169
			static Delegate GetOnExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler ()
			{
				if (cb_onExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ == null)
					cb_onExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_));
				return cb_onExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			}

			static void n_OnExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mraidView)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.BenignDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var mraidView = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_mraidView, JniHandleOwnership.DoNotTransfer);
				__this.OnExpandFinished (mraidView);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.BenignDelegate']/method[@name='onExpandFinished' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register ("onExpandFinished", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "GetOnExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler")]
			public virtual unsafe void OnExpandFinished (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? mraidView)
			{
				const string __id = "onExpandFinished.(Lcom/sas/ia/android/sdk/MRAIDWebView;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((mraidView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) mraidView).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (mraidView);
				}
			}

			static Delegate? cb_onLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetOnLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_Handler ()
			{
				if (cb_onLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_ == null)
					cb_onLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLILL_V (n_OnLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_));
				return cb_onLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_;
			}

			static void n_OnLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mraidView, int errorCode, IntPtr native_description, IntPtr native_failingUrl)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.BenignDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var mraidView = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_mraidView, JniHandleOwnership.DoNotTransfer);
				var description = JNIEnv.GetString (native_description, JniHandleOwnership.DoNotTransfer);
				var failingUrl = JNIEnv.GetString (native_failingUrl, JniHandleOwnership.DoNotTransfer);
				__this.OnLoadFailed (mraidView, errorCode, description, failingUrl);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.BenignDelegate']/method[@name='onLoadFailed' and count(parameter)=4 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
			[Register ("onLoadFailed", "(Lcom/sas/ia/android/sdk/MRAIDWebView;ILjava/lang/String;Ljava/lang/String;)V", "GetOnLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_Handler")]
			public virtual unsafe void OnLoadFailed (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? mraidView, int errorCode, string? description, string? failingUrl)
			{
				const string __id = "onLoadFailed.(Lcom/sas/ia/android/sdk/MRAIDWebView;ILjava/lang/String;Ljava/lang/String;)V";
				IntPtr native_description = JNIEnv.NewString ((string?)description);
				IntPtr native_failingUrl = JNIEnv.NewString ((string?)failingUrl);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [4];
					__args [0] = new JniArgumentValue ((mraidView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) mraidView).Handle);
					__args [1] = new JniArgumentValue (errorCode);
					__args [2] = new JniArgumentValue (native_description);
					__args [3] = new JniArgumentValue (native_failingUrl);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_description);
					JNIEnv.DeleteLocalRef (native_failingUrl);
					global::System.GC.KeepAlive (mraidView);
				}
			}

			static Delegate? cb_onLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_;
#pragma warning disable 0169
			static Delegate GetOnLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler ()
			{
				if (cb_onLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_ == null)
					cb_onLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_));
				return cb_onLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			}

			static void n_OnLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mraidView)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.BenignDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var mraidView = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_mraidView, JniHandleOwnership.DoNotTransfer);
				__this.OnLoaded (mraidView);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.BenignDelegate']/method[@name='onLoaded' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register ("onLoaded", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "GetOnLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler")]
			public virtual unsafe void OnLoaded (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? mraidView)
			{
				const string __id = "onLoaded.(Lcom/sas/ia/android/sdk/MRAIDWebView;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((mraidView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) mraidView).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (mraidView);
				}
			}

			static Delegate? cb_onResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_;
#pragma warning disable 0169
			static Delegate GetOnResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler ()
			{
				if (cb_onResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ == null)
					cb_onResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_));
				return cb_onResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			}

			static void n_OnResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mraidView)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.BenignDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var mraidView = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_mraidView, JniHandleOwnership.DoNotTransfer);
				__this.OnResizeFinished (mraidView);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.BenignDelegate']/method[@name='onResizeFinished' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register ("onResizeFinished", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "GetOnResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler")]
			public virtual unsafe void OnResizeFinished (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? mraidView)
			{
				const string __id = "onResizeFinished.(Lcom/sas/ia/android/sdk/MRAIDWebView;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((mraidView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) mraidView).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (mraidView);
				}
			}

			static Delegate? cb_useCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Z;
#pragma warning disable 0169
			static Delegate GetUseCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_ZHandler ()
			{
				if (cb_useCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Z == null)
					cb_useCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLZ_V (n_UseCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Z));
				return cb_useCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Z;
			}

			static void n_UseCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Z (IntPtr jnienv, IntPtr native__this, IntPtr native_mraidView, bool useCustomClose)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.BenignDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var mraidView = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_mraidView, JniHandleOwnership.DoNotTransfer);
				__this.UseCustomClose (mraidView, useCustomClose);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.BenignDelegate']/method[@name='useCustomClose' and count(parameter)=2 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView'] and parameter[2][@type='boolean']]"
			[Register ("useCustomClose", "(Lcom/sas/ia/android/sdk/MRAIDWebView;Z)V", "GetUseCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_ZHandler")]
			public virtual unsafe void UseCustomClose (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? mraidView, bool useCustomClose)
			{
				const string __id = "useCustomClose.(Lcom/sas/ia/android/sdk/MRAIDWebView;Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((mraidView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) mraidView).Handle);
					__args [1] = new JniArgumentValue (useCustomClose);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (mraidView);
				}
			}

			static Delegate? cb_willBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetWillBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_Handler ()
			{
				if (cb_willBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_ == null)
					cb_willBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_Z (n_WillBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_));
				return cb_willBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_;
			}

			static bool n_WillBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mraidView, IntPtr native_url)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.BenignDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var mraidView = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_mraidView, JniHandleOwnership.DoNotTransfer);
				var url = JNIEnv.GetString (native_url, JniHandleOwnership.DoNotTransfer);
				bool __ret = __this.WillBeginAction (mraidView, url);
				return __ret;
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.BenignDelegate']/method[@name='willBeginAction' and count(parameter)=2 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView'] and parameter[2][@type='java.lang.String']]"
			[Register ("willBeginAction", "(Lcom/sas/ia/android/sdk/MRAIDWebView;Ljava/lang/String;)Z", "GetWillBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_Handler")]
			public virtual unsafe bool WillBeginAction (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? mraidView, string? url)
			{
				const string __id = "willBeginAction.(Lcom/sas/ia/android/sdk/MRAIDWebView;Ljava/lang/String;)Z";
				IntPtr native_url = JNIEnv.NewString ((string?)url);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((mraidView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) mraidView).Handle);
					__args [1] = new JniArgumentValue (native_url);
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
					return __rm;
				} finally {
					JNIEnv.DeleteLocalRef (native_url);
					global::System.GC.KeepAlive (mraidView);
				}
			}

			static Delegate? cb_willClose_Lcom_sas_ia_android_sdk_MRAIDWebView_;
#pragma warning disable 0169
			static Delegate GetWillClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler ()
			{
				if (cb_willClose_Lcom_sas_ia_android_sdk_MRAIDWebView_ == null)
					cb_willClose_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_WillClose_Lcom_sas_ia_android_sdk_MRAIDWebView_));
				return cb_willClose_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			}

			static bool n_WillClose_Lcom_sas_ia_android_sdk_MRAIDWebView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mraidView)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.BenignDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var mraidView = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_mraidView, JniHandleOwnership.DoNotTransfer);
				bool __ret = __this.WillClose (mraidView);
				return __ret;
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.BenignDelegate']/method[@name='willClose' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register ("willClose", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)Z", "GetWillClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler")]
			public virtual unsafe bool WillClose (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? mraidView)
			{
				const string __id = "willClose.(Lcom/sas/ia/android/sdk/MRAIDWebView;)Z";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((mraidView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) mraidView).Handle);
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
					return __rm;
				} finally {
					global::System.GC.KeepAlive (mraidView);
				}
			}

			static Delegate? cb_willExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetWillExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_Handler ()
			{
				if (cb_willExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_ == null)
					cb_willExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_Z (n_WillExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_));
				return cb_willExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_;
			}

			static bool n_WillExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mraidView, IntPtr native_url)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.BenignDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var mraidView = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_mraidView, JniHandleOwnership.DoNotTransfer);
				var url = JNIEnv.GetString (native_url, JniHandleOwnership.DoNotTransfer);
				bool __ret = __this.WillExpand (mraidView, url);
				return __ret;
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.BenignDelegate']/method[@name='willExpand' and count(parameter)=2 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView'] and parameter[2][@type='java.lang.String']]"
			[Register ("willExpand", "(Lcom/sas/ia/android/sdk/MRAIDWebView;Ljava/lang/String;)Z", "GetWillExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_Handler")]
			public virtual unsafe bool WillExpand (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? mraidView, string? url)
			{
				const string __id = "willExpand.(Lcom/sas/ia/android/sdk/MRAIDWebView;Ljava/lang/String;)Z";
				IntPtr native_url = JNIEnv.NewString ((string?)url);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((mraidView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) mraidView).Handle);
					__args [1] = new JniArgumentValue (native_url);
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
					return __rm;
				} finally {
					JNIEnv.DeleteLocalRef (native_url);
					global::System.GC.KeepAlive (mraidView);
				}
			}

			static Delegate? cb_willResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_;
#pragma warning disable 0169
			static Delegate GetWillResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_Handler ()
			{
				if (cb_willResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_ == null)
					cb_willResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_Z (n_WillResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_));
				return cb_willResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_;
			}

			static bool n_WillResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mraidView, IntPtr native_size)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.BenignDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var mraidView = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_mraidView, JniHandleOwnership.DoNotTransfer);
				var size = global::Java.Lang.Object.GetObject<global::Android.Graphics.Rect> (native_size, JniHandleOwnership.DoNotTransfer);
				bool __ret = __this.WillResize (mraidView, size);
				return __ret;
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.BenignDelegate']/method[@name='willResize' and count(parameter)=2 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView'] and parameter[2][@type='android.graphics.Rect']]"
			[Register ("willResize", "(Lcom/sas/ia/android/sdk/MRAIDWebView;Landroid/graphics/Rect;)Z", "GetWillResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_Handler")]
			public virtual unsafe bool WillResize (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? mraidView, global::Android.Graphics.Rect? size)
			{
				const string __id = "willResize.(Lcom/sas/ia/android/sdk/MRAIDWebView;Landroid/graphics/Rect;)Z";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((mraidView == null) ? IntPtr.Zero : ((global::Java.Lang.Object) mraidView).Handle);
					__args [1] = new JniArgumentValue ((size == null) ? IntPtr.Zero : ((global::Java.Lang.Object) size).Handle);
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
					return __rm;
				} finally {
					global::System.GC.KeepAlive (mraidView);
					global::System.GC.KeepAlive (size);
				}
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.Delegate']"
		[Register ("com/sas/ia/android/sdk/MRAIDWebView$Delegate", "", "Com.Sas.IA.Android.Sdk.MRAIDWebView/IDelegateInvoker")]
		public partial interface IDelegate : IJavaObject, IJavaPeerable {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.Delegate']/method[@name='onActionFinished' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register ("onActionFinished", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "GetOnActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IDelegateInvoker, MauiDemoApp.Binding.Android")]
			void OnActionFinished (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.Delegate']/method[@name='onClosed' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register ("onClosed", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "GetOnClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IDelegateInvoker, MauiDemoApp.Binding.Android")]
			void OnClosed (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.Delegate']/method[@name='onExpandFinished' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register ("onExpandFinished", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "GetOnExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IDelegateInvoker, MauiDemoApp.Binding.Android")]
			void OnExpandFinished (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.Delegate']/method[@name='onLoadFailed' and count(parameter)=4 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView'] and parameter[2][@type='int'] and parameter[3][@type='java.lang.String'] and parameter[4][@type='java.lang.String']]"
			[Register ("onLoadFailed", "(Lcom/sas/ia/android/sdk/MRAIDWebView;ILjava/lang/String;Ljava/lang/String;)V", "GetOnLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_Handler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IDelegateInvoker, MauiDemoApp.Binding.Android")]
			void OnLoadFailed (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0, int p1, string? p2, string? p3);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.Delegate']/method[@name='onLoaded' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register ("onLoaded", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "GetOnLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IDelegateInvoker, MauiDemoApp.Binding.Android")]
			void OnLoaded (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.Delegate']/method[@name='onResizeFinished' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register ("onResizeFinished", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "GetOnResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IDelegateInvoker, MauiDemoApp.Binding.Android")]
			void OnResizeFinished (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.Delegate']/method[@name='useCustomClose' and count(parameter)=2 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView'] and parameter[2][@type='boolean']]"
			[Register ("useCustomClose", "(Lcom/sas/ia/android/sdk/MRAIDWebView;Z)V", "GetUseCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_ZHandler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IDelegateInvoker, MauiDemoApp.Binding.Android")]
			void UseCustomClose (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0, bool p1);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.Delegate']/method[@name='willBeginAction' and count(parameter)=2 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView'] and parameter[2][@type='java.lang.String']]"
			[Register ("willBeginAction", "(Lcom/sas/ia/android/sdk/MRAIDWebView;Ljava/lang/String;)Z", "GetWillBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_Handler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IDelegateInvoker, MauiDemoApp.Binding.Android")]
			bool WillBeginAction (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0, string? p1);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.Delegate']/method[@name='willClose' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register ("willClose", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)Z", "GetWillClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IDelegateInvoker, MauiDemoApp.Binding.Android")]
			bool WillClose (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.Delegate']/method[@name='willExpand' and count(parameter)=2 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView'] and parameter[2][@type='java.lang.String']]"
			[Register ("willExpand", "(Lcom/sas/ia/android/sdk/MRAIDWebView;Ljava/lang/String;)Z", "GetWillExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_Handler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IDelegateInvoker, MauiDemoApp.Binding.Android")]
			bool WillExpand (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0, string? p1);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.Delegate']/method[@name='willResize' and count(parameter)=2 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView'] and parameter[2][@type='android.graphics.Rect']]"
			[Register ("willResize", "(Lcom/sas/ia/android/sdk/MRAIDWebView;Landroid/graphics/Rect;)Z", "GetWillResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_Handler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IDelegateInvoker, MauiDemoApp.Binding.Android")]
			bool WillResize (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0, global::Android.Graphics.Rect? p1);

		}

		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$Delegate", DoNotGenerateAcw=true)]
		internal partial class IDelegateInvoker : global::Java.Lang.Object, IDelegate {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$Delegate", typeof (IDelegateInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IDelegate? GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IDelegate> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.sas.ia.android.sdk.MRAIDWebView.Delegate'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IDelegateInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate? cb_onActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_;
#pragma warning disable 0169
			static Delegate GetOnActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler ()
			{
				if (cb_onActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ == null)
					cb_onActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_));
				return cb_onActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			}

			static void n_OnActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_p0, JniHandleOwnership.DoNotTransfer);
				__this.OnActionFinished (p0);
			}
#pragma warning restore 0169

			IntPtr id_onActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			public unsafe void OnActionFinished (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0)
			{
				if (id_onActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ == IntPtr.Zero)
					id_onActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNIEnv.GetMethodID (class_ref, "onActionFinished", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onActionFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_, __args);
			}

			static Delegate? cb_onClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_;
#pragma warning disable 0169
			static Delegate GetOnClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler ()
			{
				if (cb_onClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_ == null)
					cb_onClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_));
				return cb_onClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			}

			static void n_OnClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_p0, JniHandleOwnership.DoNotTransfer);
				__this.OnClosed (p0);
			}
#pragma warning restore 0169

			IntPtr id_onClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			public unsafe void OnClosed (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0)
			{
				if (id_onClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_ == IntPtr.Zero)
					id_onClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNIEnv.GetMethodID (class_ref, "onClosed", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onClosed_Lcom_sas_ia_android_sdk_MRAIDWebView_, __args);
			}

			static Delegate? cb_onExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_;
#pragma warning disable 0169
			static Delegate GetOnExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler ()
			{
				if (cb_onExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ == null)
					cb_onExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_));
				return cb_onExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			}

			static void n_OnExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_p0, JniHandleOwnership.DoNotTransfer);
				__this.OnExpandFinished (p0);
			}
#pragma warning restore 0169

			IntPtr id_onExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			public unsafe void OnExpandFinished (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0)
			{
				if (id_onExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ == IntPtr.Zero)
					id_onExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNIEnv.GetMethodID (class_ref, "onExpandFinished", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onExpandFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_, __args);
			}

			static Delegate? cb_onLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetOnLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_Handler ()
			{
				if (cb_onLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_ == null)
					cb_onLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLILL_V (n_OnLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_));
				return cb_onLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_;
			}

			static void n_OnLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1, IntPtr native_p2, IntPtr native_p3)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_p0, JniHandleOwnership.DoNotTransfer);
				var p2 = JNIEnv.GetString (native_p2, JniHandleOwnership.DoNotTransfer);
				var p3 = JNIEnv.GetString (native_p3, JniHandleOwnership.DoNotTransfer);
				__this.OnLoadFailed (p0, p1, p2, p3);
			}
#pragma warning restore 0169

			IntPtr id_onLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_;
			public unsafe void OnLoadFailed (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0, int p1, string? p2, string? p3)
			{
				if (id_onLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_ == IntPtr.Zero)
					id_onLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_ = JNIEnv.GetMethodID (class_ref, "onLoadFailed", "(Lcom/sas/ia/android/sdk/MRAIDWebView;ILjava/lang/String;Ljava/lang/String;)V");
				IntPtr native_p2 = JNIEnv.NewString ((string?)p2);
				IntPtr native_p3 = JNIEnv.NewString ((string?)p3);
				JValue* __args = stackalloc JValue [4];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JValue (p1);
				__args [2] = new JValue (native_p2);
				__args [3] = new JValue (native_p3);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onLoadFailed_Lcom_sas_ia_android_sdk_MRAIDWebView_ILjava_lang_String_Ljava_lang_String_, __args);
				JNIEnv.DeleteLocalRef (native_p2);
				JNIEnv.DeleteLocalRef (native_p3);
			}

			static Delegate? cb_onLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_;
#pragma warning disable 0169
			static Delegate GetOnLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler ()
			{
				if (cb_onLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_ == null)
					cb_onLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_));
				return cb_onLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			}

			static void n_OnLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_p0, JniHandleOwnership.DoNotTransfer);
				__this.OnLoaded (p0);
			}
#pragma warning restore 0169

			IntPtr id_onLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			public unsafe void OnLoaded (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0)
			{
				if (id_onLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_ == IntPtr.Zero)
					id_onLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNIEnv.GetMethodID (class_ref, "onLoaded", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onLoaded_Lcom_sas_ia_android_sdk_MRAIDWebView_, __args);
			}

			static Delegate? cb_onResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_;
#pragma warning disable 0169
			static Delegate GetOnResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler ()
			{
				if (cb_onResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ == null)
					cb_onResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OnResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_));
				return cb_onResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			}

			static void n_OnResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_p0, JniHandleOwnership.DoNotTransfer);
				__this.OnResizeFinished (p0);
			}
#pragma warning restore 0169

			IntPtr id_onResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			public unsafe void OnResizeFinished (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0)
			{
				if (id_onResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ == IntPtr.Zero)
					id_onResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNIEnv.GetMethodID (class_ref, "onResizeFinished", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onResizeFinished_Lcom_sas_ia_android_sdk_MRAIDWebView_, __args);
			}

			static Delegate? cb_useCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Z;
#pragma warning disable 0169
			static Delegate GetUseCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_ZHandler ()
			{
				if (cb_useCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Z == null)
					cb_useCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLZ_V (n_UseCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Z));
				return cb_useCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Z;
			}

			static void n_UseCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Z (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, bool p1)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_p0, JniHandleOwnership.DoNotTransfer);
				__this.UseCustomClose (p0, p1);
			}
#pragma warning restore 0169

			IntPtr id_useCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Z;
			public unsafe void UseCustomClose (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0, bool p1)
			{
				if (id_useCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Z == IntPtr.Zero)
					id_useCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Z = JNIEnv.GetMethodID (class_ref, "useCustomClose", "(Lcom/sas/ia/android/sdk/MRAIDWebView;Z)V");
				JValue* __args = stackalloc JValue [2];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JValue (p1);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_useCustomClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Z, __args);
			}

			static Delegate? cb_willBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetWillBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_Handler ()
			{
				if (cb_willBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_ == null)
					cb_willBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_Z (n_WillBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_));
				return cb_willBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_;
			}

			static bool n_WillBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_p0, JniHandleOwnership.DoNotTransfer);
				var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
				bool __ret = __this.WillBeginAction (p0, p1);
				return __ret;
			}
#pragma warning restore 0169

			IntPtr id_willBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_;
			public unsafe bool WillBeginAction (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0, string? p1)
			{
				if (id_willBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_ == IntPtr.Zero)
					id_willBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_ = JNIEnv.GetMethodID (class_ref, "willBeginAction", "(Lcom/sas/ia/android/sdk/MRAIDWebView;Ljava/lang/String;)Z");
				IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
				JValue* __args = stackalloc JValue [2];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JValue (native_p1);
				var __ret = JNIEnv.CallBooleanMethod (((global::Java.Lang.Object) this).Handle, id_willBeginAction_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_, __args);
				JNIEnv.DeleteLocalRef (native_p1);
				return __ret;
			}

			static Delegate? cb_willClose_Lcom_sas_ia_android_sdk_MRAIDWebView_;
#pragma warning disable 0169
			static Delegate GetWillClose_Lcom_sas_ia_android_sdk_MRAIDWebView_Handler ()
			{
				if (cb_willClose_Lcom_sas_ia_android_sdk_MRAIDWebView_ == null)
					cb_willClose_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_WillClose_Lcom_sas_ia_android_sdk_MRAIDWebView_));
				return cb_willClose_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			}

			static bool n_WillClose_Lcom_sas_ia_android_sdk_MRAIDWebView_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_p0, JniHandleOwnership.DoNotTransfer);
				bool __ret = __this.WillClose (p0);
				return __ret;
			}
#pragma warning restore 0169

			IntPtr id_willClose_Lcom_sas_ia_android_sdk_MRAIDWebView_;
			public unsafe bool WillClose (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0)
			{
				if (id_willClose_Lcom_sas_ia_android_sdk_MRAIDWebView_ == IntPtr.Zero)
					id_willClose_Lcom_sas_ia_android_sdk_MRAIDWebView_ = JNIEnv.GetMethodID (class_ref, "willClose", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)Z");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				var __ret = JNIEnv.CallBooleanMethod (((global::Java.Lang.Object) this).Handle, id_willClose_Lcom_sas_ia_android_sdk_MRAIDWebView_, __args);
				return __ret;
			}

			static Delegate? cb_willExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetWillExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_Handler ()
			{
				if (cb_willExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_ == null)
					cb_willExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_Z (n_WillExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_));
				return cb_willExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_;
			}

			static bool n_WillExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_p0, JniHandleOwnership.DoNotTransfer);
				var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
				bool __ret = __this.WillExpand (p0, p1);
				return __ret;
			}
#pragma warning restore 0169

			IntPtr id_willExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_;
			public unsafe bool WillExpand (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0, string? p1)
			{
				if (id_willExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_ == IntPtr.Zero)
					id_willExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_ = JNIEnv.GetMethodID (class_ref, "willExpand", "(Lcom/sas/ia/android/sdk/MRAIDWebView;Ljava/lang/String;)Z");
				IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
				JValue* __args = stackalloc JValue [2];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JValue (native_p1);
				var __ret = JNIEnv.CallBooleanMethod (((global::Java.Lang.Object) this).Handle, id_willExpand_Lcom_sas_ia_android_sdk_MRAIDWebView_Ljava_lang_String_, __args);
				JNIEnv.DeleteLocalRef (native_p1);
				return __ret;
			}

			static Delegate? cb_willResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_;
#pragma warning disable 0169
			static Delegate GetWillResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_Handler ()
			{
				if (cb_willResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_ == null)
					cb_willResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_Z (n_WillResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_));
				return cb_willResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_;
			}

			static bool n_WillResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IDelegate> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (native_p0, JniHandleOwnership.DoNotTransfer);
				var p1 = global::Java.Lang.Object.GetObject<global::Android.Graphics.Rect> (native_p1, JniHandleOwnership.DoNotTransfer);
				bool __ret = __this.WillResize (p0, p1);
				return __ret;
			}
#pragma warning restore 0169

			IntPtr id_willResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_;
			public unsafe bool WillResize (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? p0, global::Android.Graphics.Rect? p1)
			{
				if (id_willResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_ == IntPtr.Zero)
					id_willResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_ = JNIEnv.GetMethodID (class_ref, "willResize", "(Lcom/sas/ia/android/sdk/MRAIDWebView;Landroid/graphics/Rect;)Z");
				JValue* __args = stackalloc JValue [2];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				var __ret = JNIEnv.CallBooleanMethod (((global::Java.Lang.Object) this).Handle, id_willResize_Lcom_sas_ia_android_sdk_MRAIDWebView_Landroid_graphics_Rect_, __args);
				return __ret;
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefault']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDDefault", DoNotGenerateAcw=true)]
		protected internal partial class MRAIDDefault : global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDResizable {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDDefault", typeof (MRAIDDefault));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected MRAIDDefault (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefault']/constructor[@name='MRAIDWebView.MRAIDDefault' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register (".ctor", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "")]
			protected unsafe MRAIDDefault (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? __self) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType!) + ";)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			static Delegate? cb_doClose;
#pragma warning disable 0169
			static Delegate GetDoCloseHandler ()
			{
				if (cb_doClose == null)
					cb_doClose = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_DoClose));
				return cb_doClose;
			}

			static void n_DoClose (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefault> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.DoClose ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefault']/method[@name='doClose' and count(parameter)=0]"
			[Register ("doClose", "()V", "GetDoCloseHandler")]
			protected override unsafe void DoClose ()
			{
				const string __id = "doClose.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
#pragma warning disable 0169
			static Delegate GetEnterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler ()
			{
				if (cb_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ == null)
					cb_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_EnterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_));
				return cb_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
			}

			static void n_EnterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ (IntPtr jnienv, IntPtr native__this, IntPtr native_formerState)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefault> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var formerState = (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState?)global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (native_formerState, JniHandleOwnership.DoNotTransfer);
				__this.EnterFromState (formerState);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefault']/method[@name='enterFromState' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView.MRAIDState']]"
			[Register ("enterFromState", "(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V", "GetEnterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler")]
			public override unsafe void EnterFromState (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? formerState)
			{
				const string __id = "enterFromState.(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((formerState == null) ? IntPtr.Zero : ((global::Java.Lang.Object) formerState).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (formerState);
				}
			}

			static Delegate? cb_mraidStateValue;
#pragma warning disable 0169
			static Delegate GetMraidStateValueHandler ()
			{
				if (cb_mraidStateValue == null)
					cb_mraidStateValue = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_MraidStateValue));
				return cb_mraidStateValue;
			}

			static IntPtr n_MraidStateValue (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefault> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.NewString (__this.MraidStateValue ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefault']/method[@name='mraidStateValue' and count(parameter)=0]"
			[Register ("mraidStateValue", "()Ljava/lang/String;", "GetMraidStateValueHandler")]
			public override unsafe string? MraidStateValue ()
			{
				const string __id = "mraidStateValue.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_onPositionChanged;
#pragma warning disable 0169
			static Delegate GetOnPositionChangedHandler ()
			{
				if (cb_onPositionChanged == null)
					cb_onPositionChanged = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnPositionChanged));
				return cb_onPositionChanged;
			}

			static void n_OnPositionChanged (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefault> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.OnPositionChanged ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefault']/method[@name='onPositionChanged' and count(parameter)=0]"
			[Register ("onPositionChanged", "()V", "GetOnPositionChangedHandler")]
			public override unsafe void OnPositionChanged ()
			{
				const string __id = "onPositionChanged.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_resize;
#pragma warning disable 0169
			static Delegate GetResizeHandler ()
			{
				if (cb_resize == null)
					cb_resize = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Resize));
				return cb_resize;
			}

			static void n_Resize (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefault> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Resize ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefault']/method[@name='resize' and count(parameter)=0]"
			[Register ("resize", "()V", "GetResizeHandler")]
			public override unsafe void Resize ()
			{
				const string __id = "resize.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_;
#pragma warning disable 0169
			static Delegate GetShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_Handler ()
			{
				if (cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_ == null)
					cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_ShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_));
				return cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_;
			}

			static void n_ShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_hostActivity, IntPtr native_strongReference)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefault> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var hostActivity = global::Java.Lang.Object.GetObject<global::Android.App.Activity> (native_hostActivity, JniHandleOwnership.DoNotTransfer);
				var strongReference = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_strongReference, JniHandleOwnership.DoNotTransfer);
				__this.ShowInterstitially (hostActivity, strongReference);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefault']/method[@name='showInterstitially' and count(parameter)=2 and parameter[1][@type='android.app.Activity'] and parameter[2][@type='java.lang.Object']]"
			[Register ("showInterstitially", "(Landroid/app/Activity;Ljava/lang/Object;)V", "GetShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_Handler")]
			public override unsafe void ShowInterstitially (global::Android.App.Activity? hostActivity, global::Java.Lang.Object? strongReference)
			{
				const string __id = "showInterstitially.(Landroid/app/Activity;Ljava/lang/Object;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((hostActivity == null) ? IntPtr.Zero : ((global::Java.Lang.Object) hostActivity).Handle);
					__args [1] = new JniArgumentValue ((strongReference == null) ? IntPtr.Zero : ((global::Java.Lang.Object) strongReference).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (hostActivity);
					global::System.GC.KeepAlive (strongReference);
				}
			}

			static Delegate? cb_willClose;
#pragma warning disable 0169
			static Delegate GetWillCloseHandler ()
			{
				if (cb_willClose == null)
					cb_willClose = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_WillClose));
				return cb_willClose;
			}

			static bool n_WillClose (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefault> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.WillClose ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefault']/method[@name='willClose' and count(parameter)=0]"
			[Register ("willClose", "()Z", "GetWillCloseHandler")]
			protected override unsafe bool WillClose ()
			{
				const string __id = "willClose.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefaultInterstitial']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDDefaultInterstitial", DoNotGenerateAcw=true)]
		protected internal partial class MRAIDDefaultInterstitial : global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefault {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDDefaultInterstitial", typeof (MRAIDDefaultInterstitial));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected MRAIDDefaultInterstitial (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			static Delegate? cb_getHostActivity;
#pragma warning disable 0169
			static Delegate GetGetHostActivityHandler ()
			{
				if (cb_getHostActivity == null)
					cb_getHostActivity = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetHostActivity));
				return cb_getHostActivity;
			}

			static IntPtr n_GetHostActivity (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefaultInterstitial> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.HostActivity);
			}
#pragma warning restore 0169

			public override unsafe global::Android.App.Activity? HostActivity {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefaultInterstitial']/method[@name='getHostActivity' and count(parameter)=0]"
				[Register ("getHostActivity", "()Landroid/app/Activity;", "GetGetHostActivityHandler")]
				get {
					const string __id = "getHostActivity.()Landroid/app/Activity;";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Android.App.Activity> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			static Delegate? cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
#pragma warning disable 0169
			static Delegate GetBeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler ()
			{
				if (cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ == null)
					cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_BeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_));
				return cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
			}

			static void n_BeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ (IntPtr jnienv, IntPtr native__this, IntPtr native_formerState)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefaultInterstitial> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var formerState = (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState?)global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (native_formerState, JniHandleOwnership.DoNotTransfer);
				__this.BeginFromState (formerState);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefaultInterstitial']/method[@name='beginFromState' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView.MRAIDState']]"
			[Register ("beginFromState", "(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V", "GetBeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler")]
			public virtual unsafe void BeginFromState (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? formerState)
			{
				const string __id = "beginFromState.(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((formerState == null) ? IntPtr.Zero : ((global::Java.Lang.Object) formerState).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (formerState);
				}
			}

			static Delegate? cb_close;
#pragma warning disable 0169
			static Delegate GetCloseHandler ()
			{
				if (cb_close == null)
					cb_close = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Close));
				return cb_close;
			}

			static void n_Close (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefaultInterstitial> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Close ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefaultInterstitial']/method[@name='close' and count(parameter)=0]"
			[Register ("close", "()V", "GetCloseHandler")]
			public override unsafe void Close ()
			{
				const string __id = "close.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_doClose;
#pragma warning disable 0169
			static Delegate GetDoCloseHandler ()
			{
				if (cb_doClose == null)
					cb_doClose = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_DoClose));
				return cb_doClose;
			}

			static void n_DoClose (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefaultInterstitial> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.DoClose ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefaultInterstitial']/method[@name='doClose' and count(parameter)=0]"
			[Register ("doClose", "()V", "GetDoCloseHandler")]
			protected override unsafe void DoClose ()
			{
				const string __id = "doClose.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_expand_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetExpand_Ljava_lang_String_Handler ()
			{
				if (cb_expand_Ljava_lang_String_ == null)
					cb_expand_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Expand_Ljava_lang_String_));
				return cb_expand_Ljava_lang_String_;
			}

			static void n_Expand_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_url)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefaultInterstitial> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var url = JNIEnv.GetString (native_url, JniHandleOwnership.DoNotTransfer);
				__this.Expand (url);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefaultInterstitial']/method[@name='expand' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("expand", "(Ljava/lang/String;)V", "GetExpand_Ljava_lang_String_Handler")]
			public override unsafe void Expand (string? url)
			{
				const string __id = "expand.(Ljava/lang/String;)V";
				IntPtr native_url = JNIEnv.NewString ((string?)url);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_url);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_url);
				}
			}

			static Delegate? cb_onOrientationPropertiesChanged;
#pragma warning disable 0169
			static Delegate GetOnOrientationPropertiesChangedHandler ()
			{
				if (cb_onOrientationPropertiesChanged == null)
					cb_onOrientationPropertiesChanged = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnOrientationPropertiesChanged));
				return cb_onOrientationPropertiesChanged;
			}

			static void n_OnOrientationPropertiesChanged (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefaultInterstitial> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.OnOrientationPropertiesChanged ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefaultInterstitial']/method[@name='onOrientationPropertiesChanged' and count(parameter)=0]"
			[Register ("onOrientationPropertiesChanged", "()V", "GetOnOrientationPropertiesChangedHandler")]
			public override unsafe void OnOrientationPropertiesChanged ()
			{
				const string __id = "onOrientationPropertiesChanged.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_resize;
#pragma warning disable 0169
			static Delegate GetResizeHandler ()
			{
				if (cb_resize == null)
					cb_resize = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Resize));
				return cb_resize;
			}

			static void n_Resize (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefaultInterstitial> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Resize ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefaultInterstitial']/method[@name='resize' and count(parameter)=0]"
			[Register ("resize", "()V", "GetResizeHandler")]
			public override unsafe void Resize ()
			{
				const string __id = "resize.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_setUseCustomClose_Z;
#pragma warning disable 0169
			static Delegate GetSetUseCustomClose_ZHandler ()
			{
				if (cb_setUseCustomClose_Z == null)
					cb_setUseCustomClose_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetUseCustomClose_Z));
				return cb_setUseCustomClose_Z;
			}

			static void n_SetUseCustomClose_Z (IntPtr jnienv, IntPtr native__this, bool useCustomClose)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefaultInterstitial> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.SetUseCustomClose (useCustomClose);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefaultInterstitial']/method[@name='setUseCustomClose' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setUseCustomClose", "(Z)V", "GetSetUseCustomClose_ZHandler")]
			public override unsafe void SetUseCustomClose (bool useCustomClose)
			{
				const string __id = "setUseCustomClose.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (useCustomClose);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}

			static Delegate? cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_;
#pragma warning disable 0169
			static Delegate GetShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_Handler ()
			{
				if (cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_ == null)
					cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_ShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_));
				return cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_;
			}

			static void n_ShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_hostActivity, IntPtr native_strongReference)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDDefaultInterstitial> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var hostActivity = global::Java.Lang.Object.GetObject<global::Android.App.Activity> (native_hostActivity, JniHandleOwnership.DoNotTransfer);
				var strongReference = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_strongReference, JniHandleOwnership.DoNotTransfer);
				__this.ShowInterstitially (hostActivity, strongReference);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDDefaultInterstitial']/method[@name='showInterstitially' and count(parameter)=2 and parameter[1][@type='android.app.Activity'] and parameter[2][@type='java.lang.Object']]"
			[Register ("showInterstitially", "(Landroid/app/Activity;Ljava/lang/Object;)V", "GetShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_Handler")]
			public override unsafe void ShowInterstitially (global::Android.App.Activity? hostActivity, global::Java.Lang.Object? strongReference)
			{
				const string __id = "showInterstitially.(Landroid/app/Activity;Ljava/lang/Object;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((hostActivity == null) ? IntPtr.Zero : ((global::Java.Lang.Object) hostActivity).Handle);
					__args [1] = new JniArgumentValue ((strongReference == null) ? IntPtr.Zero : ((global::Java.Lang.Object) strongReference).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (hostActivity);
					global::System.GC.KeepAlive (strongReference);
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDExpanded']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDExpanded", DoNotGenerateAcw=true)]
		protected internal partial class MRAIDExpanded : global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDExpandedBase {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDExpanded", typeof (MRAIDExpanded));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected MRAIDExpanded (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDExpanded']/constructor[@name='MRAIDWebView.MRAIDExpanded' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register (".ctor", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "")]
			protected unsafe MRAIDExpanded (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? __self) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType!) + ";)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			static Delegate? cb_getHostActivity;
#pragma warning disable 0169
			static Delegate GetGetHostActivityHandler ()
			{
				if (cb_getHostActivity == null)
					cb_getHostActivity = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetHostActivity));
				return cb_getHostActivity;
			}

			static IntPtr n_GetHostActivity (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDExpanded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.HostActivity);
			}
#pragma warning restore 0169

			public override unsafe global::Android.App.Activity? HostActivity {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDExpanded']/method[@name='getHostActivity' and count(parameter)=0]"
				[Register ("getHostActivity", "()Landroid/app/Activity;", "GetGetHostActivityHandler")]
				get {
					const string __id = "getHostActivity.()Landroid/app/Activity;";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Android.App.Activity> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			static Delegate? cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
#pragma warning disable 0169
			static Delegate GetBeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler ()
			{
				if (cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ == null)
					cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_BeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_));
				return cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
			}

			static void n_BeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ (IntPtr jnienv, IntPtr native__this, IntPtr native_formerState)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDExpanded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var formerState = (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState?)global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (native_formerState, JniHandleOwnership.DoNotTransfer);
				__this.BeginFromState (formerState);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDExpanded']/method[@name='beginFromState' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView.MRAIDState']]"
			[Register ("beginFromState", "(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V", "GetBeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler")]
			public virtual unsafe void BeginFromState (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? formerState)
			{
				const string __id = "beginFromState.(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((formerState == null) ? IntPtr.Zero : ((global::Java.Lang.Object) formerState).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (formerState);
				}
			}

			static Delegate? cb_close;
#pragma warning disable 0169
			static Delegate GetCloseHandler ()
			{
				if (cb_close == null)
					cb_close = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Close));
				return cb_close;
			}

			static void n_Close (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDExpanded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Close ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDExpanded']/method[@name='close' and count(parameter)=0]"
			[Register ("close", "()V", "GetCloseHandler")]
			public override unsafe void Close ()
			{
				const string __id = "close.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_closeState;
#pragma warning disable 0169
			static Delegate GetCloseStateHandler ()
			{
				if (cb_closeState == null)
					cb_closeState = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_CloseState));
				return cb_closeState;
			}

			static IntPtr n_CloseState (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDExpanded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.CloseState ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDExpanded']/method[@name='closeState' and count(parameter)=0]"
			[Register ("closeState", "()Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;", "GetCloseStateHandler")]
			protected override unsafe global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? CloseState ()
			{
				const string __id = "closeState.()Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_doClose;
#pragma warning disable 0169
			static Delegate GetDoCloseHandler ()
			{
				if (cb_doClose == null)
					cb_doClose = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_DoClose));
				return cb_doClose;
			}

			static void n_DoClose (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDExpanded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.DoClose ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDExpanded']/method[@name='doClose' and count(parameter)=0]"
			[Register ("doClose", "()V", "GetDoCloseHandler")]
			protected override unsafe void DoClose ()
			{
				const string __id = "doClose.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_onOrientationPropertiesChanged;
#pragma warning disable 0169
			static Delegate GetOnOrientationPropertiesChangedHandler ()
			{
				if (cb_onOrientationPropertiesChanged == null)
					cb_onOrientationPropertiesChanged = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnOrientationPropertiesChanged));
				return cb_onOrientationPropertiesChanged;
			}

			static void n_OnOrientationPropertiesChanged (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDExpanded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.OnOrientationPropertiesChanged ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDExpanded']/method[@name='onOrientationPropertiesChanged' and count(parameter)=0]"
			[Register ("onOrientationPropertiesChanged", "()V", "GetOnOrientationPropertiesChangedHandler")]
			public override unsafe void OnOrientationPropertiesChanged ()
			{
				const string __id = "onOrientationPropertiesChanged.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_setUseCustomClose_Z;
#pragma warning disable 0169
			static Delegate GetSetUseCustomClose_ZHandler ()
			{
				if (cb_setUseCustomClose_Z == null)
					cb_setUseCustomClose_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetUseCustomClose_Z));
				return cb_setUseCustomClose_Z;
			}

			static void n_SetUseCustomClose_Z (IntPtr jnienv, IntPtr native__this, bool useCustomClose)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDExpanded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.SetUseCustomClose (useCustomClose);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDExpanded']/method[@name='setUseCustomClose' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setUseCustomClose", "(Z)V", "GetSetUseCustomClose_ZHandler")]
			public override unsafe void SetUseCustomClose (bool useCustomClose)
			{
				const string __id = "setUseCustomClose.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (useCustomClose);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDExpandedBase']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDExpandedBase", DoNotGenerateAcw=true)]
		protected internal partial class MRAIDExpandedBase : global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLoaded {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDExpandedBase", typeof (MRAIDExpandedBase));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected MRAIDExpandedBase (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDExpandedBase']/constructor[@name='MRAIDWebView.MRAIDExpandedBase' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register (".ctor", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "")]
			protected unsafe MRAIDExpandedBase (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? __self) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType!) + ";)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			static Delegate? cb_expansionLayout;
#pragma warning disable 0169
			static Delegate GetExpansionLayoutHandler ()
			{
				if (cb_expansionLayout == null)
					cb_expansionLayout = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_ExpansionLayout));
				return cb_expansionLayout;
			}

			static IntPtr n_ExpansionLayout (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDExpandedBase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.ExpansionLayout ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDExpandedBase']/method[@name='expansionLayout' and count(parameter)=0]"
			[Register ("expansionLayout", "()Landroid/widget/RelativeLayout$LayoutParams;", "GetExpansionLayoutHandler")]
			protected virtual unsafe global::Android.Widget.RelativeLayout.LayoutParams? ExpansionLayout ()
			{
				const string __id = "expansionLayout.()Landroid/widget/RelativeLayout$LayoutParams;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Android.Widget.RelativeLayout.LayoutParams> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_mraidStateValue;
#pragma warning disable 0169
			static Delegate GetMraidStateValueHandler ()
			{
				if (cb_mraidStateValue == null)
					cb_mraidStateValue = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_MraidStateValue));
				return cb_mraidStateValue;
			}

			static IntPtr n_MraidStateValue (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDExpandedBase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.NewString (__this.MraidStateValue ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDExpandedBase']/method[@name='mraidStateValue' and count(parameter)=0]"
			[Register ("mraidStateValue", "()Ljava/lang/String;", "GetMraidStateValueHandler")]
			public override unsafe string? MraidStateValue ()
			{
				const string __id = "mraidStateValue.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_resize;
#pragma warning disable 0169
			static Delegate GetResizeHandler ()
			{
				if (cb_resize == null)
					cb_resize = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Resize));
				return cb_resize;
			}

			static void n_Resize (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDExpandedBase> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Resize ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDExpandedBase']/method[@name='resize' and count(parameter)=0]"
			[Register ("resize", "()V", "GetResizeHandler")]
			public override unsafe void Resize ()
			{
				const string __id = "resize.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDHidden']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDHidden", DoNotGenerateAcw=true)]
		protected internal partial class MRAIDHidden : global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLoaded {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDHidden", typeof (MRAIDHidden));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected MRAIDHidden (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDHidden']/constructor[@name='MRAIDWebView.MRAIDHidden' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register (".ctor", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "")]
			protected unsafe MRAIDHidden (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? __self) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType!) + ";)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			static Delegate? cb_closeState;
#pragma warning disable 0169
			static Delegate GetCloseStateHandler ()
			{
				if (cb_closeState == null)
					cb_closeState = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_CloseState));
				return cb_closeState;
			}

			static IntPtr n_CloseState (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDHidden> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.CloseState ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDHidden']/method[@name='closeState' and count(parameter)=0]"
			[Register ("closeState", "()Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;", "GetCloseStateHandler")]
			protected override unsafe global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? CloseState ()
			{
				const string __id = "closeState.()Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_mraidStateValue;
#pragma warning disable 0169
			static Delegate GetMraidStateValueHandler ()
			{
				if (cb_mraidStateValue == null)
					cb_mraidStateValue = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_MraidStateValue));
				return cb_mraidStateValue;
			}

			static IntPtr n_MraidStateValue (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDHidden> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.NewString (__this.MraidStateValue ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDHidden']/method[@name='mraidStateValue' and count(parameter)=0]"
			[Register ("mraidStateValue", "()Ljava/lang/String;", "GetMraidStateValueHandler")]
			public override unsafe string? MraidStateValue ()
			{
				const string __id = "mraidStateValue.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_openLink_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetOpenLink_Ljava_lang_String_Handler ()
			{
				if (cb_openLink_Ljava_lang_String_ == null)
					cb_openLink_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OpenLink_Ljava_lang_String_));
				return cb_openLink_Ljava_lang_String_;
			}

			static void n_OpenLink_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_url)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDHidden> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var url = JNIEnv.GetString (native_url, JniHandleOwnership.DoNotTransfer);
				__this.OpenLink (url);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDHidden']/method[@name='openLink' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("openLink", "(Ljava/lang/String;)V", "GetOpenLink_Ljava_lang_String_Handler")]
			public override unsafe void OpenLink (string? url)
			{
				const string __id = "openLink.(Ljava/lang/String;)V";
				IntPtr native_url = JNIEnv.NewString ((string?)url);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_url);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_url);
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLinkOpened']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDLinkOpened", DoNotGenerateAcw=true)]
		protected internal partial class MRAIDLinkOpened : global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDLinkOpened", typeof (MRAIDLinkOpened));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected MRAIDLinkOpened (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			static Delegate? cb_getHostActivity;
#pragma warning disable 0169
			static Delegate GetGetHostActivityHandler ()
			{
				if (cb_getHostActivity == null)
					cb_getHostActivity = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetHostActivity));
				return cb_getHostActivity;
			}

			static IntPtr n_GetHostActivity (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLinkOpened> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.HostActivity);
			}
#pragma warning restore 0169

			public override unsafe global::Android.App.Activity? HostActivity {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLinkOpened']/method[@name='getHostActivity' and count(parameter)=0]"
				[Register ("getHostActivity", "()Landroid/app/Activity;", "GetGetHostActivityHandler")]
				get {
					const string __id = "getHostActivity.()Landroid/app/Activity;";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Android.App.Activity> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			static Delegate? cb_getLinkHostActivity;
#pragma warning disable 0169
			static Delegate GetGetLinkHostActivityHandler ()
			{
				if (cb_getLinkHostActivity == null)
					cb_getLinkHostActivity = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetLinkHostActivity));
				return cb_getLinkHostActivity;
			}

			static IntPtr n_GetLinkHostActivity (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLinkOpened> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.LinkHostActivity);
			}
#pragma warning restore 0169

			public override unsafe global::Android.App.Activity? LinkHostActivity {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLinkOpened']/method[@name='getLinkHostActivity' and count(parameter)=0]"
				[Register ("getLinkHostActivity", "()Landroid/app/Activity;", "GetGetLinkHostActivityHandler")]
				get {
					const string __id = "getLinkHostActivity.()Landroid/app/Activity;";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Android.App.Activity> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			static Delegate? cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
#pragma warning disable 0169
			static Delegate GetBeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler ()
			{
				if (cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ == null)
					cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_BeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_));
				return cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
			}

			static void n_BeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ (IntPtr jnienv, IntPtr native__this, IntPtr native_formerState)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLinkOpened> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var formerState = (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState?)global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (native_formerState, JniHandleOwnership.DoNotTransfer);
				__this.BeginFromState (formerState);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLinkOpened']/method[@name='beginFromState' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView.MRAIDState']]"
			[Register ("beginFromState", "(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V", "GetBeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler")]
			protected override unsafe void BeginFromState (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? formerState)
			{
				const string __id = "beginFromState.(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((formerState == null) ? IntPtr.Zero : ((global::Java.Lang.Object) formerState).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (formerState);
				}
			}

			static Delegate? cb_closeLink;
#pragma warning disable 0169
			static Delegate GetCloseLinkHandler ()
			{
				if (cb_closeLink == null)
					cb_closeLink = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_CloseLink));
				return cb_closeLink;
			}

			static void n_CloseLink (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLinkOpened> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.CloseLink ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLinkOpened']/method[@name='closeLink' and count(parameter)=0]"
			[Register ("closeLink", "()V", "GetCloseLinkHandler")]
			public override unsafe void CloseLink ()
			{
				const string __id = "closeLink.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_closeState;
#pragma warning disable 0169
			static Delegate GetCloseStateHandler ()
			{
				if (cb_closeState == null)
					cb_closeState = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_CloseState));
				return cb_closeState;
			}

			static IntPtr n_CloseState (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLinkOpened> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.CloseState ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLinkOpened']/method[@name='closeState' and count(parameter)=0]"
			[Register ("closeState", "()Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;", "GetCloseStateHandler")]
			protected override unsafe global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? CloseState ()
			{
				const string __id = "closeState.()Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_doClose;
#pragma warning disable 0169
			static Delegate GetDoCloseHandler ()
			{
				if (cb_doClose == null)
					cb_doClose = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_DoClose));
				return cb_doClose;
			}

			static void n_DoClose (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLinkOpened> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.DoClose ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLinkOpened']/method[@name='doClose' and count(parameter)=0]"
			[Register ("doClose", "()V", "GetDoCloseHandler")]
			protected override unsafe void DoClose ()
			{
				const string __id = "doClose.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_mraidStateValue;
#pragma warning disable 0169
			static Delegate GetMraidStateValueHandler ()
			{
				if (cb_mraidStateValue == null)
					cb_mraidStateValue = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_MraidStateValue));
				return cb_mraidStateValue;
			}

			static IntPtr n_MraidStateValue (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLinkOpened> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.NewString (__this.MraidStateValue ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLinkOpened']/method[@name='mraidStateValue' and count(parameter)=0]"
			[Register ("mraidStateValue", "()Ljava/lang/String;", "GetMraidStateValueHandler")]
			public override unsafe string? MraidStateValue ()
			{
				const string __id = "mraidStateValue.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_willClose;
#pragma warning disable 0169
			static Delegate GetWillCloseHandler ()
			{
				if (cb_willClose == null)
					cb_willClose = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_WillClose));
				return cb_willClose;
			}

			static bool n_WillClose (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLinkOpened> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.WillClose ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLinkOpened']/method[@name='willClose' and count(parameter)=0]"
			[Register ("willClose", "()Z", "GetWillCloseHandler")]
			protected override unsafe bool WillClose ()
			{
				const string __id = "willClose.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLoaded']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDLoaded", DoNotGenerateAcw=true)]
		protected internal partial class MRAIDLoaded : global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDLoaded", typeof (MRAIDLoaded));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected MRAIDLoaded (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLoaded']/constructor[@name='MRAIDWebView.MRAIDLoaded' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register (".ctor", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "")]
			protected unsafe MRAIDLoaded (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? __self) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType!) + ";)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			static Delegate? cb_closeState;
#pragma warning disable 0169
			static Delegate GetCloseStateHandler ()
			{
				if (cb_closeState == null)
					cb_closeState = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_CloseState));
				return cb_closeState;
			}

			static IntPtr n_CloseState (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.CloseState ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLoaded']/method[@name='closeState' and count(parameter)=0]"
			[Register ("closeState", "()Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;", "GetCloseStateHandler")]
			protected override unsafe global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? CloseState ()
			{
				const string __id = "closeState.()Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_executeJavaScript_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetExecuteJavaScript_Ljava_lang_String_Ljava_lang_String_Handler ()
			{
				if (cb_executeJavaScript_Ljava_lang_String_Ljava_lang_String_ == null)
					cb_executeJavaScript_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_L (n_ExecuteJavaScript_Ljava_lang_String_Ljava_lang_String_));
				return cb_executeJavaScript_Ljava_lang_String_Ljava_lang_String_;
			}

			static IntPtr n_ExecuteJavaScript_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_js, IntPtr native_jsStringExpression)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var js = JNIEnv.GetString (native_js, JniHandleOwnership.DoNotTransfer);
				var jsStringExpression = JNIEnv.GetString (native_jsStringExpression, JniHandleOwnership.DoNotTransfer);
				IntPtr __ret = JNIEnv.NewString (__this.ExecuteJavaScript (js, jsStringExpression));
				return __ret;
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLoaded']/method[@name='executeJavaScript' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
			[Register ("executeJavaScript", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetExecuteJavaScript_Ljava_lang_String_Ljava_lang_String_Handler")]
			public override unsafe string? ExecuteJavaScript (string? js, string? jsStringExpression)
			{
				const string __id = "executeJavaScript.(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
				IntPtr native_js = JNIEnv.NewString ((string?)js);
				IntPtr native_jsStringExpression = JNIEnv.NewString ((string?)jsStringExpression);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_js);
					__args [1] = new JniArgumentValue (native_jsStringExpression);
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_js);
					JNIEnv.DeleteLocalRef (native_jsStringExpression);
				}
			}

			static Delegate? cb_htmlContent;
#pragma warning disable 0169
			static Delegate GetHtmlContentHandler ()
			{
				if (cb_htmlContent == null)
					cb_htmlContent = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_HtmlContent));
				return cb_htmlContent;
			}

			static IntPtr n_HtmlContent (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.NewString (__this.HtmlContent ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLoaded']/method[@name='htmlContent' and count(parameter)=0]"
			[Register ("htmlContent", "()Ljava/lang/String;", "GetHtmlContentHandler")]
			public override unsafe string? HtmlContent ()
			{
				const string __id = "htmlContent.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_openLink_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetOpenLink_Ljava_lang_String_Handler ()
			{
				if (cb_openLink_Ljava_lang_String_ == null)
					cb_openLink_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OpenLink_Ljava_lang_String_));
				return cb_openLink_Ljava_lang_String_;
			}

			static void n_OpenLink_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_url)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var url = JNIEnv.GetString (native_url, JniHandleOwnership.DoNotTransfer);
				__this.OpenLink (url);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLoaded']/method[@name='openLink' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("openLink", "(Ljava/lang/String;)V", "GetOpenLink_Ljava_lang_String_Handler")]
			public override unsafe void OpenLink (string? url)
			{
				const string __id = "openLink.(Ljava/lang/String;)V";
				IntPtr native_url = JNIEnv.NewString ((string?)url);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_url);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_url);
				}
			}

			static Delegate? cb_receiveJSString_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetReceiveJSString_Ljava_lang_String_Handler ()
			{
				if (cb_receiveJSString_Ljava_lang_String_ == null)
					cb_receiveJSString_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_ReceiveJSString_Ljava_lang_String_));
				return cb_receiveJSString_Ljava_lang_String_;
			}

			static void n_ReceiveJSString_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_jsString)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var jsString = JNIEnv.GetString (native_jsString, JniHandleOwnership.DoNotTransfer);
				__this.ReceiveJSString (jsString);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLoaded']/method[@name='receiveJSString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("receiveJSString", "(Ljava/lang/String;)V", "GetReceiveJSString_Ljava_lang_String_Handler")]
			public override unsafe void ReceiveJSString (string? jsString)
			{
				const string __id = "receiveJSString.(Ljava/lang/String;)V";
				IntPtr native_jsString = JNIEnv.NewString ((string?)jsString);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_jsString);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_jsString);
				}
			}

			static Delegate? cb_shouldOverrideUrlLoading_Landroid_webkit_WebView_Landroid_webkit_WebResourceRequest_;
#pragma warning disable 0169
			static Delegate GetShouldOverrideUrlLoading_Landroid_webkit_WebView_Landroid_webkit_WebResourceRequest_Handler ()
			{
				if (cb_shouldOverrideUrlLoading_Landroid_webkit_WebView_Landroid_webkit_WebResourceRequest_ == null)
					cb_shouldOverrideUrlLoading_Landroid_webkit_WebView_Landroid_webkit_WebResourceRequest_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_Z (n_ShouldOverrideUrlLoading_Landroid_webkit_WebView_Landroid_webkit_WebResourceRequest_));
				return cb_shouldOverrideUrlLoading_Landroid_webkit_WebView_Landroid_webkit_WebResourceRequest_;
			}

			static bool n_ShouldOverrideUrlLoading_Landroid_webkit_WebView_Landroid_webkit_WebResourceRequest_ (IntPtr jnienv, IntPtr native__this, IntPtr native_view, IntPtr native_request)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var view = global::Java.Lang.Object.GetObject<global::Android.Webkit.WebView> (native_view, JniHandleOwnership.DoNotTransfer);
				var request = (global::Android.Webkit.IWebResourceRequest?)global::Java.Lang.Object.GetObject<global::Android.Webkit.IWebResourceRequest> (native_request, JniHandleOwnership.DoNotTransfer);
				bool __ret = __this.ShouldOverrideUrlLoading (view, request);
				return __ret;
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLoaded']/method[@name='shouldOverrideUrlLoading' and count(parameter)=2 and parameter[1][@type='android.webkit.WebView'] and parameter[2][@type='android.webkit.WebResourceRequest']]"
			[Register ("shouldOverrideUrlLoading", "(Landroid/webkit/WebView;Landroid/webkit/WebResourceRequest;)Z", "GetShouldOverrideUrlLoading_Landroid_webkit_WebView_Landroid_webkit_WebResourceRequest_Handler")]
			public override unsafe bool ShouldOverrideUrlLoading (global::Android.Webkit.WebView? view, global::Android.Webkit.IWebResourceRequest? request)
			{
				const string __id = "shouldOverrideUrlLoading.(Landroid/webkit/WebView;Landroid/webkit/WebResourceRequest;)Z";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((view == null) ? IntPtr.Zero : ((global::Java.Lang.Object) view).Handle);
					__args [1] = new JniArgumentValue ((request == null) ? IntPtr.Zero : ((global::Java.Lang.Object) request).Handle);
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
					return __rm;
				} finally {
					global::System.GC.KeepAlive (view);
					global::System.GC.KeepAlive (request);
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLoading']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDLoading", DoNotGenerateAcw=true)]
		protected internal partial class MRAIDLoading : global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded, global::Com.Sas.IA.Android.Sdk.ContentLoadingTask.IContentLoadingListener {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDLoading", typeof (MRAIDLoading));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected MRAIDLoading (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			static Delegate? cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
#pragma warning disable 0169
			static Delegate GetBeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler ()
			{
				if (cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ == null)
					cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_BeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_));
				return cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
			}

			static void n_BeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ (IntPtr jnienv, IntPtr native__this, IntPtr native_formerState)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLoading> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var formerState = (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState?)global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (native_formerState, JniHandleOwnership.DoNotTransfer);
				__this.BeginFromState (formerState);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLoading']/method[@name='beginFromState' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView.MRAIDState']]"
			[Register ("beginFromState", "(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V", "GetBeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler")]
			protected override unsafe void BeginFromState (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? formerState)
			{
				const string __id = "beginFromState.(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((formerState == null) ? IntPtr.Zero : ((global::Java.Lang.Object) formerState).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (formerState);
				}
			}

			static Delegate? cb_closeState;
#pragma warning disable 0169
			static Delegate GetCloseStateHandler ()
			{
				if (cb_closeState == null)
					cb_closeState = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_CloseState));
				return cb_closeState;
			}

			static IntPtr n_CloseState (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLoading> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.CloseState ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLoading']/method[@name='closeState' and count(parameter)=0]"
			[Register ("closeState", "()Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;", "GetCloseStateHandler")]
			protected override unsafe global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? CloseState ()
			{
				const string __id = "closeState.()Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_doClose;
#pragma warning disable 0169
			static Delegate GetDoCloseHandler ()
			{
				if (cb_doClose == null)
					cb_doClose = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_DoClose));
				return cb_doClose;
			}

			static void n_DoClose (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLoading> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.DoClose ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLoading']/method[@name='doClose' and count(parameter)=0]"
			[Register ("doClose", "()V", "GetDoCloseHandler")]
			protected override unsafe void DoClose ()
			{
				const string __id = "doClose.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_loadComplete_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetLoadComplete_Ljava_lang_String_Ljava_lang_String_Handler ()
			{
				if (cb_loadComplete_Ljava_lang_String_Ljava_lang_String_ == null)
					cb_loadComplete_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_LoadComplete_Ljava_lang_String_Ljava_lang_String_));
				return cb_loadComplete_Ljava_lang_String_Ljava_lang_String_;
			}

			static void n_LoadComplete_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_pageContent, IntPtr native_errorMessage)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLoading> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var pageContent = JNIEnv.GetString (native_pageContent, JniHandleOwnership.DoNotTransfer);
				var errorMessage = JNIEnv.GetString (native_errorMessage, JniHandleOwnership.DoNotTransfer);
				__this.LoadComplete (pageContent, errorMessage);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLoading']/method[@name='loadComplete' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
			[Register ("loadComplete", "(Ljava/lang/String;Ljava/lang/String;)V", "GetLoadComplete_Ljava_lang_String_Ljava_lang_String_Handler")]
			public virtual unsafe void LoadComplete (string? pageContent, string? errorMessage)
			{
				const string __id = "loadComplete.(Ljava/lang/String;Ljava/lang/String;)V";
				IntPtr native_pageContent = JNIEnv.NewString ((string?)pageContent);
				IntPtr native_errorMessage = JNIEnv.NewString ((string?)errorMessage);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_pageContent);
					__args [1] = new JniArgumentValue (native_errorMessage);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_pageContent);
					JNIEnv.DeleteLocalRef (native_errorMessage);
				}
			}

			static Delegate? cb_mraidStateValue;
#pragma warning disable 0169
			static Delegate GetMraidStateValueHandler ()
			{
				if (cb_mraidStateValue == null)
					cb_mraidStateValue = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_MraidStateValue));
				return cb_mraidStateValue;
			}

			static IntPtr n_MraidStateValue (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLoading> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.NewString (__this.MraidStateValue ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLoading']/method[@name='mraidStateValue' and count(parameter)=0]"
			[Register ("mraidStateValue", "()Ljava/lang/String;", "GetMraidStateValueHandler")]
			public override unsafe string? MraidStateValue ()
			{
				const string __id = "mraidStateValue.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_onLoadFailed_ILjava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetOnLoadFailed_ILjava_lang_String_Ljava_lang_String_Handler ()
			{
				if (cb_onLoadFailed_ILjava_lang_String_Ljava_lang_String_ == null)
					cb_onLoadFailed_ILjava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPILL_V (n_OnLoadFailed_ILjava_lang_String_Ljava_lang_String_));
				return cb_onLoadFailed_ILjava_lang_String_Ljava_lang_String_;
			}

			static void n_OnLoadFailed_ILjava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, int errorCode, IntPtr native_description, IntPtr native_failingUrl)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLoading> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var description = JNIEnv.GetString (native_description, JniHandleOwnership.DoNotTransfer);
				var failingUrl = JNIEnv.GetString (native_failingUrl, JniHandleOwnership.DoNotTransfer);
				__this.OnLoadFailed (errorCode, description, failingUrl);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDLoading']/method[@name='onLoadFailed' and count(parameter)=3 and parameter[1][@type='int'] and parameter[2][@type='java.lang.String'] and parameter[3][@type='java.lang.String']]"
			[Register ("onLoadFailed", "(ILjava/lang/String;Ljava/lang/String;)V", "GetOnLoadFailed_ILjava_lang_String_Ljava_lang_String_Handler")]
			protected virtual unsafe void OnLoadFailed (int errorCode, string? description, string? failingUrl)
			{
				const string __id = "onLoadFailed.(ILjava/lang/String;Ljava/lang/String;)V";
				IntPtr native_description = JNIEnv.NewString ((string?)description);
				IntPtr native_failingUrl = JNIEnv.NewString ((string?)failingUrl);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [3];
					__args [0] = new JniArgumentValue (errorCode);
					__args [1] = new JniArgumentValue (native_description);
					__args [2] = new JniArgumentValue (native_failingUrl);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_description);
					JNIEnv.DeleteLocalRef (native_failingUrl);
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNestedState']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDNestedState", DoNotGenerateAcw=true)]
		protected internal partial class MRAIDNestedState : global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDNestedState", typeof (MRAIDNestedState));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected MRAIDNestedState (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			static Delegate? cb_getHostActivity;
#pragma warning disable 0169
			static Delegate GetGetHostActivityHandler ()
			{
				if (cb_getHostActivity == null)
					cb_getHostActivity = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetHostActivity));
				return cb_getHostActivity;
			}

			static IntPtr n_GetHostActivity (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNestedState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.HostActivity);
			}
#pragma warning restore 0169

			public override unsafe global::Android.App.Activity? HostActivity {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNestedState']/method[@name='getHostActivity' and count(parameter)=0]"
				[Register ("getHostActivity", "()Landroid/app/Activity;", "GetGetHostActivityHandler")]
				get {
					const string __id = "getHostActivity.()Landroid/app/Activity;";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Android.App.Activity> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			static Delegate? cb_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
#pragma warning disable 0169
			static Delegate GetEnterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler ()
			{
				if (cb_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ == null)
					cb_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_EnterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_));
				return cb_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
			}

			static void n_EnterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ (IntPtr jnienv, IntPtr native__this, IntPtr native_formerState)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNestedState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var formerState = (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState?)global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (native_formerState, JniHandleOwnership.DoNotTransfer);
				__this.EnterFromState (formerState);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNestedState']/method[@name='enterFromState' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView.MRAIDState']]"
			[Register ("enterFromState", "(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V", "GetEnterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler")]
			public override unsafe void EnterFromState (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? formerState)
			{
				const string __id = "enterFromState.(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((formerState == null) ? IntPtr.Zero : ((global::Java.Lang.Object) formerState).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (formerState);
				}
			}

			static Delegate? cb_mraidStateValue;
#pragma warning disable 0169
			static Delegate GetMraidStateValueHandler ()
			{
				if (cb_mraidStateValue == null)
					cb_mraidStateValue = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_MraidStateValue));
				return cb_mraidStateValue;
			}

			static IntPtr n_MraidStateValue (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNestedState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.NewString (__this.MraidStateValue ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNestedState']/method[@name='mraidStateValue' and count(parameter)=0]"
			[Register ("mraidStateValue", "()Ljava/lang/String;", "GetMraidStateValueHandler")]
			public override unsafe string? MraidStateValue ()
			{
				const string __id = "mraidStateValue.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDNotLoaded", DoNotGenerateAcw=true)]
		protected internal partial class MRAIDNotLoaded : global::Android.Webkit.WebViewClient {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDNotLoaded", typeof (MRAIDNotLoaded));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected MRAIDNotLoaded (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/constructor[@name='MRAIDWebView.MRAIDNotLoaded' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register (".ctor", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "")]
			protected unsafe MRAIDNotLoaded (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? __self) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType!) + ";)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			static Delegate? cb_getHostActivity;
#pragma warning disable 0169
			static Delegate GetGetHostActivityHandler ()
			{
				if (cb_getHostActivity == null)
					cb_getHostActivity = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetHostActivity));
				return cb_getHostActivity;
			}

			static IntPtr n_GetHostActivity (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.HostActivity);
			}
#pragma warning restore 0169

			public virtual unsafe global::Android.App.Activity? HostActivity {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='getHostActivity' and count(parameter)=0]"
				[Register ("getHostActivity", "()Landroid/app/Activity;", "GetGetHostActivityHandler")]
				get {
					const string __id = "getHostActivity.()Landroid/app/Activity;";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Android.App.Activity> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			static Delegate? cb_getLinkHostActivity;
#pragma warning disable 0169
			static Delegate GetGetLinkHostActivityHandler ()
			{
				if (cb_getLinkHostActivity == null)
					cb_getLinkHostActivity = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetLinkHostActivity));
				return cb_getLinkHostActivity;
			}

			static IntPtr n_GetLinkHostActivity (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.LinkHostActivity);
			}
#pragma warning restore 0169

			public virtual unsafe global::Android.App.Activity? LinkHostActivity {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='getLinkHostActivity' and count(parameter)=0]"
				[Register ("getLinkHostActivity", "()Landroid/app/Activity;", "GetGetLinkHostActivityHandler")]
				get {
					const string __id = "getLinkHostActivity.()Landroid/app/Activity;";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Android.App.Activity> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			static Delegate? cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
#pragma warning disable 0169
			static Delegate GetBeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler ()
			{
				if (cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ == null)
					cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_BeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_));
				return cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
			}

			static void n_BeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ (IntPtr jnienv, IntPtr native__this, IntPtr native_formerState)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var formerState = (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState?)global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (native_formerState, JniHandleOwnership.DoNotTransfer);
				__this.BeginFromState (formerState);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='beginFromState' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView.MRAIDState']]"
			[Register ("beginFromState", "(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V", "GetBeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler")]
			protected virtual unsafe void BeginFromState (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? formerState)
			{
				const string __id = "beginFromState.(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((formerState == null) ? IntPtr.Zero : ((global::Java.Lang.Object) formerState).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (formerState);
				}
			}

			static Delegate? cb_close;
#pragma warning disable 0169
			static Delegate GetCloseHandler ()
			{
				if (cb_close == null)
					cb_close = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Close));
				return cb_close;
			}

			static void n_Close (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Close ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='close' and count(parameter)=0]"
			[Register ("close", "()V", "GetCloseHandler")]
			public virtual unsafe void Close ()
			{
				const string __id = "close.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_closeLink;
#pragma warning disable 0169
			static Delegate GetCloseLinkHandler ()
			{
				if (cb_closeLink == null)
					cb_closeLink = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_CloseLink));
				return cb_closeLink;
			}

			static void n_CloseLink (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.CloseLink ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='closeLink' and count(parameter)=0]"
			[Register ("closeLink", "()V", "GetCloseLinkHandler")]
			public virtual unsafe void CloseLink ()
			{
				const string __id = "closeLink.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_closeState;
#pragma warning disable 0169
			static Delegate GetCloseStateHandler ()
			{
				if (cb_closeState == null)
					cb_closeState = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_CloseState));
				return cb_closeState;
			}

			static IntPtr n_CloseState (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.CloseState ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='closeState' and count(parameter)=0]"
			[Register ("closeState", "()Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;", "GetCloseStateHandler")]
			protected virtual unsafe global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? CloseState ()
			{
				const string __id = "closeState.()Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_doClose;
#pragma warning disable 0169
			static Delegate GetDoCloseHandler ()
			{
				if (cb_doClose == null)
					cb_doClose = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_DoClose));
				return cb_doClose;
			}

			static void n_DoClose (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.DoClose ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='doClose' and count(parameter)=0]"
			[Register ("doClose", "()V", "GetDoCloseHandler")]
			protected virtual unsafe void DoClose ()
			{
				const string __id = "doClose.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
#pragma warning disable 0169
			static Delegate GetEnterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler ()
			{
				if (cb_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ == null)
					cb_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_EnterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_));
				return cb_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
			}

			static void n_EnterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ (IntPtr jnienv, IntPtr native__this, IntPtr native_formerState)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var formerState = (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState?)global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (native_formerState, JniHandleOwnership.DoNotTransfer);
				__this.EnterFromState (formerState);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='enterFromState' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView.MRAIDState']]"
			[Register ("enterFromState", "(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V", "GetEnterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler")]
			public virtual unsafe void EnterFromState (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? formerState)
			{
				const string __id = "enterFromState.(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((formerState == null) ? IntPtr.Zero : ((global::Java.Lang.Object) formerState).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (formerState);
				}
			}

			static Delegate? cb_executeJavaScript_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetExecuteJavaScript_Ljava_lang_String_Ljava_lang_String_Handler ()
			{
				if (cb_executeJavaScript_Ljava_lang_String_Ljava_lang_String_ == null)
					cb_executeJavaScript_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_L (n_ExecuteJavaScript_Ljava_lang_String_Ljava_lang_String_));
				return cb_executeJavaScript_Ljava_lang_String_Ljava_lang_String_;
			}

			static IntPtr n_ExecuteJavaScript_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_js, IntPtr native_jsStringExpression)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var js = JNIEnv.GetString (native_js, JniHandleOwnership.DoNotTransfer);
				var jsStringExpression = JNIEnv.GetString (native_jsStringExpression, JniHandleOwnership.DoNotTransfer);
				IntPtr __ret = JNIEnv.NewString (__this.ExecuteJavaScript (js, jsStringExpression));
				return __ret;
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='executeJavaScript' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
			[Register ("executeJavaScript", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetExecuteJavaScript_Ljava_lang_String_Ljava_lang_String_Handler")]
			public virtual unsafe string? ExecuteJavaScript (string? js, string? jsStringExpression)
			{
				const string __id = "executeJavaScript.(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
				IntPtr native_js = JNIEnv.NewString ((string?)js);
				IntPtr native_jsStringExpression = JNIEnv.NewString ((string?)jsStringExpression);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue (native_js);
					__args [1] = new JniArgumentValue (native_jsStringExpression);
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
					JNIEnv.DeleteLocalRef (native_js);
					JNIEnv.DeleteLocalRef (native_jsStringExpression);
				}
			}

			static Delegate? cb_expand_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetExpand_Ljava_lang_String_Handler ()
			{
				if (cb_expand_Ljava_lang_String_ == null)
					cb_expand_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Expand_Ljava_lang_String_));
				return cb_expand_Ljava_lang_String_;
			}

			static void n_Expand_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_url)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var url = JNIEnv.GetString (native_url, JniHandleOwnership.DoNotTransfer);
				__this.Expand (url);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='expand' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("expand", "(Ljava/lang/String;)V", "GetExpand_Ljava_lang_String_Handler")]
			public virtual unsafe void Expand (string? url)
			{
				const string __id = "expand.(Ljava/lang/String;)V";
				IntPtr native_url = JNIEnv.NewString ((string?)url);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_url);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_url);
				}
			}

			static Delegate? cb_htmlContent;
#pragma warning disable 0169
			static Delegate GetHtmlContentHandler ()
			{
				if (cb_htmlContent == null)
					cb_htmlContent = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_HtmlContent));
				return cb_htmlContent;
			}

			static IntPtr n_HtmlContent (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.NewString (__this.HtmlContent ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='htmlContent' and count(parameter)=0]"
			[Register ("htmlContent", "()Ljava/lang/String;", "GetHtmlContentHandler")]
			public virtual unsafe string? HtmlContent ()
			{
				const string __id = "htmlContent.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_mraidStateValue;
#pragma warning disable 0169
			static Delegate GetMraidStateValueHandler ()
			{
				if (cb_mraidStateValue == null)
					cb_mraidStateValue = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_MraidStateValue));
				return cb_mraidStateValue;
			}

			static IntPtr n_MraidStateValue (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.NewString (__this.MraidStateValue ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='mraidStateValue' and count(parameter)=0]"
			[Register ("mraidStateValue", "()Ljava/lang/String;", "GetMraidStateValueHandler")]
			public virtual unsafe string? MraidStateValue ()
			{
				const string __id = "mraidStateValue.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_onOrientationPropertiesChanged;
#pragma warning disable 0169
			static Delegate GetOnOrientationPropertiesChangedHandler ()
			{
				if (cb_onOrientationPropertiesChanged == null)
					cb_onOrientationPropertiesChanged = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnOrientationPropertiesChanged));
				return cb_onOrientationPropertiesChanged;
			}

			static void n_OnOrientationPropertiesChanged (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.OnOrientationPropertiesChanged ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='onOrientationPropertiesChanged' and count(parameter)=0]"
			[Register ("onOrientationPropertiesChanged", "()V", "GetOnOrientationPropertiesChangedHandler")]
			public virtual unsafe void OnOrientationPropertiesChanged ()
			{
				const string __id = "onOrientationPropertiesChanged.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_onPositionChanged;
#pragma warning disable 0169
			static Delegate GetOnPositionChangedHandler ()
			{
				if (cb_onPositionChanged == null)
					cb_onPositionChanged = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnPositionChanged));
				return cb_onPositionChanged;
			}

			static void n_OnPositionChanged (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.OnPositionChanged ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='onPositionChanged' and count(parameter)=0]"
			[Register ("onPositionChanged", "()V", "GetOnPositionChangedHandler")]
			public virtual unsafe void OnPositionChanged ()
			{
				const string __id = "onPositionChanged.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_openLink_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetOpenLink_Ljava_lang_String_Handler ()
			{
				if (cb_openLink_Ljava_lang_String_ == null)
					cb_openLink_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OpenLink_Ljava_lang_String_));
				return cb_openLink_Ljava_lang_String_;
			}

			static void n_OpenLink_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_url)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var url = JNIEnv.GetString (native_url, JniHandleOwnership.DoNotTransfer);
				__this.OpenLink (url);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='openLink' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("openLink", "(Ljava/lang/String;)V", "GetOpenLink_Ljava_lang_String_Handler")]
			public virtual unsafe void OpenLink (string? url)
			{
				const string __id = "openLink.(Ljava/lang/String;)V";
				IntPtr native_url = JNIEnv.NewString ((string?)url);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_url);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_url);
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='postToUI' and count(parameter)=1 and parameter[1][@type='java.lang.Runnable']]"
			[Register ("postToUI", "(Ljava/lang/Runnable;)V", "")]
			protected unsafe void PostToUI (global::Java.Lang.IRunnable? runnable)
			{
				const string __id = "postToUI.(Ljava/lang/Runnable;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((runnable == null) ? IntPtr.Zero : ((global::Java.Lang.Object) runnable).Handle);
					_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (runnable);
				}
			}

			static Delegate? cb_receiveJSString_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetReceiveJSString_Ljava_lang_String_Handler ()
			{
				if (cb_receiveJSString_Ljava_lang_String_ == null)
					cb_receiveJSString_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_ReceiveJSString_Ljava_lang_String_));
				return cb_receiveJSString_Ljava_lang_String_;
			}

			static void n_ReceiveJSString_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_jsString)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var jsString = JNIEnv.GetString (native_jsString, JniHandleOwnership.DoNotTransfer);
				__this.ReceiveJSString (jsString);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='receiveJSString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("receiveJSString", "(Ljava/lang/String;)V", "GetReceiveJSString_Ljava_lang_String_Handler")]
			public virtual unsafe void ReceiveJSString (string? jsString)
			{
				const string __id = "receiveJSString.(Ljava/lang/String;)V";
				IntPtr native_jsString = JNIEnv.NewString ((string?)jsString);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_jsString);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_jsString);
				}
			}

			static Delegate? cb_resize;
#pragma warning disable 0169
			static Delegate GetResizeHandler ()
			{
				if (cb_resize == null)
					cb_resize = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Resize));
				return cb_resize;
			}

			static void n_Resize (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Resize ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='resize' and count(parameter)=0]"
			[Register ("resize", "()V", "GetResizeHandler")]
			public virtual unsafe void Resize ()
			{
				const string __id = "resize.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='runInUI' and count(parameter)=1 and parameter[1][@type='java.lang.Runnable']]"
			[Register ("runInUI", "(Ljava/lang/Runnable;)V", "")]
			protected unsafe void RunInUI (global::Java.Lang.IRunnable? runnable)
			{
				const string __id = "runInUI.(Ljava/lang/Runnable;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((runnable == null) ? IntPtr.Zero : ((global::Java.Lang.Object) runnable).Handle);
					_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (runnable);
				}
			}

			static Delegate? cb_setUseCustomClose_Z;
#pragma warning disable 0169
			static Delegate GetSetUseCustomClose_ZHandler ()
			{
				if (cb_setUseCustomClose_Z == null)
					cb_setUseCustomClose_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetUseCustomClose_Z));
				return cb_setUseCustomClose_Z;
			}

			static void n_SetUseCustomClose_Z (IntPtr jnienv, IntPtr native__this, bool useCustomClose)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.SetUseCustomClose (useCustomClose);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='setUseCustomClose' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setUseCustomClose", "(Z)V", "GetSetUseCustomClose_ZHandler")]
			public virtual unsafe void SetUseCustomClose (bool useCustomClose)
			{
				const string __id = "setUseCustomClose.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (useCustomClose);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}

			static Delegate? cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_;
#pragma warning disable 0169
			static Delegate GetShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_Handler ()
			{
				if (cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_ == null)
					cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_ShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_));
				return cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_;
			}

			static void n_ShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_hostActivity, IntPtr native_strongReference)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var hostActivity = global::Java.Lang.Object.GetObject<global::Android.App.Activity> (native_hostActivity, JniHandleOwnership.DoNotTransfer);
				var strongReference = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_strongReference, JniHandleOwnership.DoNotTransfer);
				__this.ShowInterstitially (hostActivity, strongReference);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='showInterstitially' and count(parameter)=2 and parameter[1][@type='android.app.Activity'] and parameter[2][@type='java.lang.Object']]"
			[Register ("showInterstitially", "(Landroid/app/Activity;Ljava/lang/Object;)V", "GetShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_Handler")]
			public virtual unsafe void ShowInterstitially (global::Android.App.Activity? hostActivity, global::Java.Lang.Object? strongReference)
			{
				const string __id = "showInterstitially.(Landroid/app/Activity;Ljava/lang/Object;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [2];
					__args [0] = new JniArgumentValue ((hostActivity == null) ? IntPtr.Zero : ((global::Java.Lang.Object) hostActivity).Handle);
					__args [1] = new JniArgumentValue ((strongReference == null) ? IntPtr.Zero : ((global::Java.Lang.Object) strongReference).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (hostActivity);
					global::System.GC.KeepAlive (strongReference);
				}
			}

			static Delegate? cb_willClose;
#pragma warning disable 0169
			static Delegate GetWillCloseHandler ()
			{
				if (cb_willClose == null)
					cb_willClose = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_WillClose));
				return cb_willClose;
			}

			static bool n_WillClose (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDNotLoaded> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.WillClose ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDNotLoaded']/method[@name='willClose' and count(parameter)=0]"
			[Register ("willClose", "()Z", "GetWillCloseHandler")]
			protected virtual unsafe bool WillClose ()
			{
				const string __id = "willClose.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDResizable']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDResizable", DoNotGenerateAcw=true)]
		protected internal partial class MRAIDResizable : global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDLoaded {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDResizable", typeof (MRAIDResizable));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected MRAIDResizable (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDResizable']/constructor[@name='MRAIDWebView.MRAIDResizable' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register (".ctor", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "")]
			protected unsafe MRAIDResizable (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? __self) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType!) + ";)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			static Delegate? cb_expand_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetExpand_Ljava_lang_String_Handler ()
			{
				if (cb_expand_Ljava_lang_String_ == null)
					cb_expand_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Expand_Ljava_lang_String_));
				return cb_expand_Ljava_lang_String_;
			}

			static void n_Expand_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_url)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDResizable> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var url = JNIEnv.GetString (native_url, JniHandleOwnership.DoNotTransfer);
				__this.Expand (url);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDResizable']/method[@name='expand' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("expand", "(Ljava/lang/String;)V", "GetExpand_Ljava_lang_String_Handler")]
			public override unsafe void Expand (string? url)
			{
				const string __id = "expand.(Ljava/lang/String;)V";
				IntPtr native_url = JNIEnv.NewString ((string?)url);
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (native_url);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					JNIEnv.DeleteLocalRef (native_url);
				}
			}

			static Delegate? cb_willResize;
#pragma warning disable 0169
			static Delegate GetWillResizeHandler ()
			{
				if (cb_willResize == null)
					cb_willResize = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_WillResize));
				return cb_willResize;
			}

			static bool n_WillResize (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDResizable> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return __this.WillResize ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDResizable']/method[@name='willResize' and count(parameter)=0]"
			[Register ("willResize", "()Z", "GetWillResizeHandler")]
			protected virtual unsafe bool WillResize ()
			{
				const string __id = "willResize.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDResized']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDResized", DoNotGenerateAcw=true)]
		protected internal partial class MRAIDResized : global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDResizable {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDResized", typeof (MRAIDResized));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected MRAIDResized (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			// Metadata.xml XPath constructor reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDResized']/constructor[@name='MRAIDWebView.MRAIDResized' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView']]"
			[Register (".ctor", "(Lcom/sas/ia/android/sdk/MRAIDWebView;)V", "")]
			protected unsafe MRAIDResized (global::Com.Sas.IA.Android.Sdk.MRAIDWebView? __self) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
			{
				string __id = "(L" + global::Android.Runtime.JNIEnv.GetJniName (GetType ().DeclaringType!) + ";)V";

				if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
					return;

				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((__self == null) ? IntPtr.Zero : ((global::Java.Lang.Object) __self).Handle);
					var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
					SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
					_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (__self);
				}
			}

			static Delegate? cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
#pragma warning disable 0169
			static Delegate GetBeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler ()
			{
				if (cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ == null)
					cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_BeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_));
				return cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
			}

			static void n_BeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ (IntPtr jnienv, IntPtr native__this, IntPtr native_formerState)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDResized> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var formerState = (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState?)global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (native_formerState, JniHandleOwnership.DoNotTransfer);
				__this.BeginFromState (formerState);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDResized']/method[@name='beginFromState' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView.MRAIDState']]"
			[Register ("beginFromState", "(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V", "GetBeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler")]
			protected override unsafe void BeginFromState (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? formerState)
			{
				const string __id = "beginFromState.(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((formerState == null) ? IntPtr.Zero : ((global::Java.Lang.Object) formerState).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (formerState);
				}
			}

			static Delegate? cb_closeState;
#pragma warning disable 0169
			static Delegate GetCloseStateHandler ()
			{
				if (cb_closeState == null)
					cb_closeState = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_CloseState));
				return cb_closeState;
			}

			static IntPtr n_CloseState (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDResized> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.CloseState ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDResized']/method[@name='closeState' and count(parameter)=0]"
			[Register ("closeState", "()Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;", "GetCloseStateHandler")]
			protected override unsafe global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? CloseState ()
			{
				const string __id = "closeState.()Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_doClose;
#pragma warning disable 0169
			static Delegate GetDoCloseHandler ()
			{
				if (cb_doClose == null)
					cb_doClose = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_DoClose));
				return cb_doClose;
			}

			static void n_DoClose (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDResized> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.DoClose ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDResized']/method[@name='doClose' and count(parameter)=0]"
			[Register ("doClose", "()V", "GetDoCloseHandler")]
			protected override unsafe void DoClose ()
			{
				const string __id = "doClose.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_mraidStateValue;
#pragma warning disable 0169
			static Delegate GetMraidStateValueHandler ()
			{
				if (cb_mraidStateValue == null)
					cb_mraidStateValue = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_MraidStateValue));
				return cb_mraidStateValue;
			}

			static IntPtr n_MraidStateValue (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDResized> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.NewString (__this.MraidStateValue ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDResized']/method[@name='mraidStateValue' and count(parameter)=0]"
			[Register ("mraidStateValue", "()Ljava/lang/String;", "GetMraidStateValueHandler")]
			public override unsafe string? MraidStateValue ()
			{
				const string __id = "mraidStateValue.()Ljava/lang/String;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_resize;
#pragma warning disable 0169
			static Delegate GetResizeHandler ()
			{
				if (cb_resize == null)
					cb_resize = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Resize));
				return cb_resize;
			}

			static void n_Resize (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDResized> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Resize ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDResized']/method[@name='resize' and count(parameter)=0]"
			[Register ("resize", "()V", "GetResizeHandler")]
			public override unsafe void Resize ()
			{
				const string __id = "resize.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

		}

		// Metadata.xml XPath interface reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']"
		[Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDState", "", "Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker")]
		protected internal partial interface IMRAIDState : IJavaObject, IJavaPeerable {
			global::Android.App.Activity? HostActivity {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']/method[@name='getHostActivity' and count(parameter)=0]"
				[Register ("getHostActivity", "()Landroid/app/Activity;", "GetGetHostActivityHandler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker, MauiDemoApp.Binding.Android")]
				get; 
			}

			global::Android.App.Activity? LinkHostActivity {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']/method[@name='getLinkHostActivity' and count(parameter)=0]"
				[Register ("getLinkHostActivity", "()Landroid/app/Activity;", "GetGetLinkHostActivityHandler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker, MauiDemoApp.Binding.Android")]
				get; 
			}

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']/method[@name='close' and count(parameter)=0]"
			[Register ("close", "()V", "GetCloseHandler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker, MauiDemoApp.Binding.Android")]
			void Close ();

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']/method[@name='closeLink' and count(parameter)=0]"
			[Register ("closeLink", "()V", "GetCloseLinkHandler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker, MauiDemoApp.Binding.Android")]
			void CloseLink ();

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']/method[@name='enterFromState' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView.MRAIDState']]"
			[Register ("enterFromState", "(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V", "GetEnterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker, MauiDemoApp.Binding.Android")]
			void EnterFromState (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? p0);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']/method[@name='executeJavaScript' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
			[Register ("executeJavaScript", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetExecuteJavaScript_Ljava_lang_String_Ljava_lang_String_Handler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker, MauiDemoApp.Binding.Android")]
			string? ExecuteJavaScript (string? p0, string? p1);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']/method[@name='expand' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("expand", "(Ljava/lang/String;)V", "GetExpand_Ljava_lang_String_Handler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker, MauiDemoApp.Binding.Android")]
			void Expand (string? p0);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']/method[@name='htmlContent' and count(parameter)=0]"
			[Register ("htmlContent", "()Ljava/lang/String;", "GetHtmlContentHandler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker, MauiDemoApp.Binding.Android")]
			string? HtmlContent ();

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']/method[@name='mraidStateValue' and count(parameter)=0]"
			[Register ("mraidStateValue", "()Ljava/lang/String;", "GetMraidStateValueHandler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker, MauiDemoApp.Binding.Android")]
			string? MraidStateValue ();

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']/method[@name='onOrientationPropertiesChanged' and count(parameter)=0]"
			[Register ("onOrientationPropertiesChanged", "()V", "GetOnOrientationPropertiesChangedHandler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker, MauiDemoApp.Binding.Android")]
			void OnOrientationPropertiesChanged ();

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']/method[@name='onPositionChanged' and count(parameter)=0]"
			[Register ("onPositionChanged", "()V", "GetOnPositionChangedHandler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker, MauiDemoApp.Binding.Android")]
			void OnPositionChanged ();

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']/method[@name='openLink' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("openLink", "(Ljava/lang/String;)V", "GetOpenLink_Ljava_lang_String_Handler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker, MauiDemoApp.Binding.Android")]
			void OpenLink (string? p0);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']/method[@name='receiveJSString' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
			[Register ("receiveJSString", "(Ljava/lang/String;)V", "GetReceiveJSString_Ljava_lang_String_Handler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker, MauiDemoApp.Binding.Android")]
			void ReceiveJSString (string? p0);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']/method[@name='resize' and count(parameter)=0]"
			[Register ("resize", "()V", "GetResizeHandler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker, MauiDemoApp.Binding.Android")]
			void Resize ();

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']/method[@name='setUseCustomClose' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setUseCustomClose", "(Z)V", "GetSetUseCustomClose_ZHandler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker, MauiDemoApp.Binding.Android")]
			void SetUseCustomClose (bool p0);

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/interface[@name='MRAIDWebView.MRAIDState']/method[@name='showInterstitially' and count(parameter)=2 and parameter[1][@type='android.app.Activity'] and parameter[2][@type='java.lang.Object']]"
			[Register ("showInterstitially", "(Landroid/app/Activity;Ljava/lang/Object;)V", "GetShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_Handler:Com.Sas.IA.Android.Sdk.MRAIDWebView/IMRAIDStateInvoker, MauiDemoApp.Binding.Android")]
			void ShowInterstitially (global::Android.App.Activity? p0, global::Java.Lang.Object? p1);

		}

		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDState", DoNotGenerateAcw=true)]
		internal partial class IMRAIDStateInvoker : global::Java.Lang.Object, IMRAIDState {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDState", typeof (IMRAIDStateInvoker));

			static IntPtr java_class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return class_ref; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			IntPtr class_ref;

			public static IMRAIDState? GetObject (IntPtr handle, JniHandleOwnership transfer)
			{
				return global::Java.Lang.Object.GetObject<IMRAIDState> (handle, transfer);
			}

			static IntPtr Validate (IntPtr handle)
			{
				if (!JNIEnv.IsInstanceOf (handle, java_class_ref))
					throw new InvalidCastException ($"Unable to convert instance of type '{JNIEnv.GetClassNameFromInstance (handle)}' to type 'com.sas.ia.android.sdk.MRAIDWebView.MRAIDState'.");
				return handle;
			}

			protected override void Dispose (bool disposing)
			{
				if (this.class_ref != IntPtr.Zero)
					JNIEnv.DeleteGlobalRef (this.class_ref);
				this.class_ref = IntPtr.Zero;
				base.Dispose (disposing);
			}

			public IMRAIDStateInvoker (IntPtr handle, JniHandleOwnership transfer) : base (Validate (handle), transfer)
			{
				IntPtr local_ref = JNIEnv.GetObjectClass (((global::Java.Lang.Object) this).Handle);
				this.class_ref = JNIEnv.NewGlobalRef (local_ref);
				JNIEnv.DeleteLocalRef (local_ref);
			}

			static Delegate? cb_getHostActivity;
#pragma warning disable 0169
			static Delegate GetGetHostActivityHandler ()
			{
				if (cb_getHostActivity == null)
					cb_getHostActivity = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetHostActivity));
				return cb_getHostActivity;
			}

			static IntPtr n_GetHostActivity (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.HostActivity);
			}
#pragma warning restore 0169

			IntPtr id_getHostActivity;
			public unsafe global::Android.App.Activity? HostActivity {
				get {
					if (id_getHostActivity == IntPtr.Zero)
						id_getHostActivity = JNIEnv.GetMethodID (class_ref, "getHostActivity", "()Landroid/app/Activity;");
					return global::Java.Lang.Object.GetObject<global::Android.App.Activity> (JNIEnv.CallObjectMethod (((global::Java.Lang.Object) this).Handle, id_getHostActivity), JniHandleOwnership.TransferLocalRef);
				}
			}

			static Delegate? cb_getLinkHostActivity;
#pragma warning disable 0169
			static Delegate GetGetLinkHostActivityHandler ()
			{
				if (cb_getLinkHostActivity == null)
					cb_getLinkHostActivity = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetLinkHostActivity));
				return cb_getLinkHostActivity;
			}

			static IntPtr n_GetLinkHostActivity (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.LinkHostActivity);
			}
#pragma warning restore 0169

			IntPtr id_getLinkHostActivity;
			public unsafe global::Android.App.Activity? LinkHostActivity {
				get {
					if (id_getLinkHostActivity == IntPtr.Zero)
						id_getLinkHostActivity = JNIEnv.GetMethodID (class_ref, "getLinkHostActivity", "()Landroid/app/Activity;");
					return global::Java.Lang.Object.GetObject<global::Android.App.Activity> (JNIEnv.CallObjectMethod (((global::Java.Lang.Object) this).Handle, id_getLinkHostActivity), JniHandleOwnership.TransferLocalRef);
				}
			}

			static Delegate? cb_close;
#pragma warning disable 0169
			static Delegate GetCloseHandler ()
			{
				if (cb_close == null)
					cb_close = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Close));
				return cb_close;
			}

			static void n_Close (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Close ();
			}
#pragma warning restore 0169

			IntPtr id_close;
			public unsafe void Close ()
			{
				if (id_close == IntPtr.Zero)
					id_close = JNIEnv.GetMethodID (class_ref, "close", "()V");
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_close);
			}

			static Delegate? cb_closeLink;
#pragma warning disable 0169
			static Delegate GetCloseLinkHandler ()
			{
				if (cb_closeLink == null)
					cb_closeLink = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_CloseLink));
				return cb_closeLink;
			}

			static void n_CloseLink (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.CloseLink ();
			}
#pragma warning restore 0169

			IntPtr id_closeLink;
			public unsafe void CloseLink ()
			{
				if (id_closeLink == IntPtr.Zero)
					id_closeLink = JNIEnv.GetMethodID (class_ref, "closeLink", "()V");
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_closeLink);
			}

			static Delegate? cb_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
#pragma warning disable 0169
			static Delegate GetEnterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler ()
			{
				if (cb_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ == null)
					cb_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_EnterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_));
				return cb_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
			}

			static void n_EnterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState?)global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (native_p0, JniHandleOwnership.DoNotTransfer);
				__this.EnterFromState (p0);
			}
#pragma warning restore 0169

			IntPtr id_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
			public unsafe void EnterFromState (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? p0)
			{
				if (id_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ == IntPtr.Zero)
					id_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ = JNIEnv.GetMethodID (class_ref, "enterFromState", "(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_enterFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_, __args);
			}

			static Delegate? cb_executeJavaScript_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetExecuteJavaScript_Ljava_lang_String_Ljava_lang_String_Handler ()
			{
				if (cb_executeJavaScript_Ljava_lang_String_Ljava_lang_String_ == null)
					cb_executeJavaScript_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_L (n_ExecuteJavaScript_Ljava_lang_String_Ljava_lang_String_));
				return cb_executeJavaScript_Ljava_lang_String_Ljava_lang_String_;
			}

			static IntPtr n_ExecuteJavaScript_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
				var p1 = JNIEnv.GetString (native_p1, JniHandleOwnership.DoNotTransfer);
				IntPtr __ret = JNIEnv.NewString (__this.ExecuteJavaScript (p0, p1));
				return __ret;
			}
#pragma warning restore 0169

			IntPtr id_executeJavaScript_Ljava_lang_String_Ljava_lang_String_;
			public unsafe string? ExecuteJavaScript (string? p0, string? p1)
			{
				if (id_executeJavaScript_Ljava_lang_String_Ljava_lang_String_ == IntPtr.Zero)
					id_executeJavaScript_Ljava_lang_String_Ljava_lang_String_ = JNIEnv.GetMethodID (class_ref, "executeJavaScript", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;");
				IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
				IntPtr native_p1 = JNIEnv.NewString ((string?)p1);
				JValue* __args = stackalloc JValue [2];
				__args [0] = new JValue (native_p0);
				__args [1] = new JValue (native_p1);
				var __ret = JNIEnv.GetString (JNIEnv.CallObjectMethod (((global::Java.Lang.Object) this).Handle, id_executeJavaScript_Ljava_lang_String_Ljava_lang_String_, __args), JniHandleOwnership.TransferLocalRef);
				JNIEnv.DeleteLocalRef (native_p0);
				JNIEnv.DeleteLocalRef (native_p1);
				return __ret;
			}

			static Delegate? cb_expand_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetExpand_Ljava_lang_String_Handler ()
			{
				if (cb_expand_Ljava_lang_String_ == null)
					cb_expand_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Expand_Ljava_lang_String_));
				return cb_expand_Ljava_lang_String_;
			}

			static void n_Expand_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
				__this.Expand (p0);
			}
#pragma warning restore 0169

			IntPtr id_expand_Ljava_lang_String_;
			public unsafe void Expand (string? p0)
			{
				if (id_expand_Ljava_lang_String_ == IntPtr.Zero)
					id_expand_Ljava_lang_String_ = JNIEnv.GetMethodID (class_ref, "expand", "(Ljava/lang/String;)V");
				IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue (native_p0);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_expand_Ljava_lang_String_, __args);
				JNIEnv.DeleteLocalRef (native_p0);
			}

			static Delegate? cb_htmlContent;
#pragma warning disable 0169
			static Delegate GetHtmlContentHandler ()
			{
				if (cb_htmlContent == null)
					cb_htmlContent = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_HtmlContent));
				return cb_htmlContent;
			}

			static IntPtr n_HtmlContent (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.NewString (__this.HtmlContent ());
			}
#pragma warning restore 0169

			IntPtr id_htmlContent;
			public unsafe string? HtmlContent ()
			{
				if (id_htmlContent == IntPtr.Zero)
					id_htmlContent = JNIEnv.GetMethodID (class_ref, "htmlContent", "()Ljava/lang/String;");
				return JNIEnv.GetString (JNIEnv.CallObjectMethod (((global::Java.Lang.Object) this).Handle, id_htmlContent), JniHandleOwnership.TransferLocalRef);
			}

			static Delegate? cb_mraidStateValue;
#pragma warning disable 0169
			static Delegate GetMraidStateValueHandler ()
			{
				if (cb_mraidStateValue == null)
					cb_mraidStateValue = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_MraidStateValue));
				return cb_mraidStateValue;
			}

			static IntPtr n_MraidStateValue (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.NewString (__this.MraidStateValue ());
			}
#pragma warning restore 0169

			IntPtr id_mraidStateValue;
			public unsafe string? MraidStateValue ()
			{
				if (id_mraidStateValue == IntPtr.Zero)
					id_mraidStateValue = JNIEnv.GetMethodID (class_ref, "mraidStateValue", "()Ljava/lang/String;");
				return JNIEnv.GetString (JNIEnv.CallObjectMethod (((global::Java.Lang.Object) this).Handle, id_mraidStateValue), JniHandleOwnership.TransferLocalRef);
			}

			static Delegate? cb_onOrientationPropertiesChanged;
#pragma warning disable 0169
			static Delegate GetOnOrientationPropertiesChangedHandler ()
			{
				if (cb_onOrientationPropertiesChanged == null)
					cb_onOrientationPropertiesChanged = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnOrientationPropertiesChanged));
				return cb_onOrientationPropertiesChanged;
			}

			static void n_OnOrientationPropertiesChanged (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.OnOrientationPropertiesChanged ();
			}
#pragma warning restore 0169

			IntPtr id_onOrientationPropertiesChanged;
			public unsafe void OnOrientationPropertiesChanged ()
			{
				if (id_onOrientationPropertiesChanged == IntPtr.Zero)
					id_onOrientationPropertiesChanged = JNIEnv.GetMethodID (class_ref, "onOrientationPropertiesChanged", "()V");
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onOrientationPropertiesChanged);
			}

			static Delegate? cb_onPositionChanged;
#pragma warning disable 0169
			static Delegate GetOnPositionChangedHandler ()
			{
				if (cb_onPositionChanged == null)
					cb_onPositionChanged = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnPositionChanged));
				return cb_onPositionChanged;
			}

			static void n_OnPositionChanged (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.OnPositionChanged ();
			}
#pragma warning restore 0169

			IntPtr id_onPositionChanged;
			public unsafe void OnPositionChanged ()
			{
				if (id_onPositionChanged == IntPtr.Zero)
					id_onPositionChanged = JNIEnv.GetMethodID (class_ref, "onPositionChanged", "()V");
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_onPositionChanged);
			}

			static Delegate? cb_openLink_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetOpenLink_Ljava_lang_String_Handler ()
			{
				if (cb_openLink_Ljava_lang_String_ == null)
					cb_openLink_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_OpenLink_Ljava_lang_String_));
				return cb_openLink_Ljava_lang_String_;
			}

			static void n_OpenLink_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
				__this.OpenLink (p0);
			}
#pragma warning restore 0169

			IntPtr id_openLink_Ljava_lang_String_;
			public unsafe void OpenLink (string? p0)
			{
				if (id_openLink_Ljava_lang_String_ == IntPtr.Zero)
					id_openLink_Ljava_lang_String_ = JNIEnv.GetMethodID (class_ref, "openLink", "(Ljava/lang/String;)V");
				IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue (native_p0);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_openLink_Ljava_lang_String_, __args);
				JNIEnv.DeleteLocalRef (native_p0);
			}

			static Delegate? cb_receiveJSString_Ljava_lang_String_;
#pragma warning disable 0169
			static Delegate GetReceiveJSString_Ljava_lang_String_Handler ()
			{
				if (cb_receiveJSString_Ljava_lang_String_ == null)
					cb_receiveJSString_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_ReceiveJSString_Ljava_lang_String_));
				return cb_receiveJSString_Ljava_lang_String_;
			}

			static void n_ReceiveJSString_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = JNIEnv.GetString (native_p0, JniHandleOwnership.DoNotTransfer);
				__this.ReceiveJSString (p0);
			}
#pragma warning restore 0169

			IntPtr id_receiveJSString_Ljava_lang_String_;
			public unsafe void ReceiveJSString (string? p0)
			{
				if (id_receiveJSString_Ljava_lang_String_ == IntPtr.Zero)
					id_receiveJSString_Ljava_lang_String_ = JNIEnv.GetMethodID (class_ref, "receiveJSString", "(Ljava/lang/String;)V");
				IntPtr native_p0 = JNIEnv.NewString ((string?)p0);
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue (native_p0);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_receiveJSString_Ljava_lang_String_, __args);
				JNIEnv.DeleteLocalRef (native_p0);
			}

			static Delegate? cb_resize;
#pragma warning disable 0169
			static Delegate GetResizeHandler ()
			{
				if (cb_resize == null)
					cb_resize = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Resize));
				return cb_resize;
			}

			static void n_Resize (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Resize ();
			}
#pragma warning restore 0169

			IntPtr id_resize;
			public unsafe void Resize ()
			{
				if (id_resize == IntPtr.Zero)
					id_resize = JNIEnv.GetMethodID (class_ref, "resize", "()V");
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_resize);
			}

			static Delegate? cb_setUseCustomClose_Z;
#pragma warning disable 0169
			static Delegate GetSetUseCustomClose_ZHandler ()
			{
				if (cb_setUseCustomClose_Z == null)
					cb_setUseCustomClose_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetUseCustomClose_Z));
				return cb_setUseCustomClose_Z;
			}

			static void n_SetUseCustomClose_Z (IntPtr jnienv, IntPtr native__this, bool p0)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.SetUseCustomClose (p0);
			}
#pragma warning restore 0169

			IntPtr id_setUseCustomClose_Z;
			public unsafe void SetUseCustomClose (bool p0)
			{
				if (id_setUseCustomClose_Z == IntPtr.Zero)
					id_setUseCustomClose_Z = JNIEnv.GetMethodID (class_ref, "setUseCustomClose", "(Z)V");
				JValue* __args = stackalloc JValue [1];
				__args [0] = new JValue (p0);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_setUseCustomClose_Z, __args);
			}

			static Delegate? cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_;
#pragma warning disable 0169
			static Delegate GetShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_Handler ()
			{
				if (cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_ == null)
					cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_ShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_));
				return cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_;
			}

			static void n_ShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var p0 = global::Java.Lang.Object.GetObject<global::Android.App.Activity> (native_p0, JniHandleOwnership.DoNotTransfer);
				var p1 = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_p1, JniHandleOwnership.DoNotTransfer);
				__this.ShowInterstitially (p0, p1);
			}
#pragma warning restore 0169

			IntPtr id_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_;
			public unsafe void ShowInterstitially (global::Android.App.Activity? p0, global::Java.Lang.Object? p1)
			{
				if (id_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_ == IntPtr.Zero)
					id_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_ = JNIEnv.GetMethodID (class_ref, "showInterstitially", "(Landroid/app/Activity;Ljava/lang/Object;)V");
				JValue* __args = stackalloc JValue [2];
				__args [0] = new JValue ((p0 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p0).Handle);
				__args [1] = new JValue ((p1 == null) ? IntPtr.Zero : ((global::Java.Lang.Object) p1).Handle);
				JNIEnv.CallVoidMethod (((global::Java.Lang.Object) this).Handle, id_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_, __args);
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDTwoPartExpandedChild']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDTwoPartExpandedChild", DoNotGenerateAcw=true)]
		protected internal partial class MRAIDTwoPartExpandedChild : global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDExpandedBase {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDTwoPartExpandedChild", typeof (MRAIDTwoPartExpandedChild));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected MRAIDTwoPartExpandedChild (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			static Delegate? cb_getHostActivity;
#pragma warning disable 0169
			static Delegate GetGetHostActivityHandler ()
			{
				if (cb_getHostActivity == null)
					cb_getHostActivity = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetHostActivity));
				return cb_getHostActivity;
			}

			static IntPtr n_GetHostActivity (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDTwoPartExpandedChild> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.HostActivity);
			}
#pragma warning restore 0169

			public override unsafe global::Android.App.Activity? HostActivity {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDTwoPartExpandedChild']/method[@name='getHostActivity' and count(parameter)=0]"
				[Register ("getHostActivity", "()Landroid/app/Activity;", "GetGetHostActivityHandler")]
				get {
					const string __id = "getHostActivity.()Landroid/app/Activity;";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Android.App.Activity> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			static Delegate? cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
#pragma warning disable 0169
			static Delegate GetBeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler ()
			{
				if (cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ == null)
					cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_BeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_));
				return cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
			}

			static void n_BeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ (IntPtr jnienv, IntPtr native__this, IntPtr native_formerState)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDTwoPartExpandedChild> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var formerState = (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState?)global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (native_formerState, JniHandleOwnership.DoNotTransfer);
				__this.BeginFromState (formerState);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDTwoPartExpandedChild']/method[@name='beginFromState' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView.MRAIDState']]"
			[Register ("beginFromState", "(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V", "GetBeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler")]
			protected override unsafe void BeginFromState (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? formerState)
			{
				const string __id = "beginFromState.(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((formerState == null) ? IntPtr.Zero : ((global::Java.Lang.Object) formerState).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (formerState);
				}
			}

			static Delegate? cb_close;
#pragma warning disable 0169
			static Delegate GetCloseHandler ()
			{
				if (cb_close == null)
					cb_close = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Close));
				return cb_close;
			}

			static void n_Close (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDTwoPartExpandedChild> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.Close ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDTwoPartExpandedChild']/method[@name='close' and count(parameter)=0]"
			[Register ("close", "()V", "GetCloseHandler")]
			public override unsafe void Close ()
			{
				const string __id = "close.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_doClose;
#pragma warning disable 0169
			static Delegate GetDoCloseHandler ()
			{
				if (cb_doClose == null)
					cb_doClose = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_DoClose));
				return cb_doClose;
			}

			static void n_DoClose (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDTwoPartExpandedChild> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.DoClose ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDTwoPartExpandedChild']/method[@name='doClose' and count(parameter)=0]"
			[Register ("doClose", "()V", "GetDoCloseHandler")]
			protected override unsafe void DoClose ()
			{
				const string __id = "doClose.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_onOrientationPropertiesChanged;
#pragma warning disable 0169
			static Delegate GetOnOrientationPropertiesChangedHandler ()
			{
				if (cb_onOrientationPropertiesChanged == null)
					cb_onOrientationPropertiesChanged = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_OnOrientationPropertiesChanged));
				return cb_onOrientationPropertiesChanged;
			}

			static void n_OnOrientationPropertiesChanged (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDTwoPartExpandedChild> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.OnOrientationPropertiesChanged ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDTwoPartExpandedChild']/method[@name='onOrientationPropertiesChanged' and count(parameter)=0]"
			[Register ("onOrientationPropertiesChanged", "()V", "GetOnOrientationPropertiesChangedHandler")]
			public override unsafe void OnOrientationPropertiesChanged ()
			{
				const string __id = "onOrientationPropertiesChanged.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

			static Delegate? cb_setUseCustomClose_Z;
#pragma warning disable 0169
			static Delegate GetSetUseCustomClose_ZHandler ()
			{
				if (cb_setUseCustomClose_Z == null)
					cb_setUseCustomClose_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetUseCustomClose_Z));
				return cb_setUseCustomClose_Z;
			}

			static void n_SetUseCustomClose_Z (IntPtr jnienv, IntPtr native__this, bool useCustomClose)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDTwoPartExpandedChild> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.SetUseCustomClose (useCustomClose);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDTwoPartExpandedChild']/method[@name='setUseCustomClose' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setUseCustomClose", "(Z)V", "GetSetUseCustomClose_ZHandler")]
			public override unsafe void SetUseCustomClose (bool useCustomClose)
			{
				const string __id = "setUseCustomClose.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (useCustomClose);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDTwoPartExpandedParent']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDTwoPartExpandedParent", DoNotGenerateAcw=true)]
		protected internal partial class MRAIDTwoPartExpandedParent : global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDExpandedBase {
			// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDTwoPartExpandedParent.ExpandedChildDelegate']"
			[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDTwoPartExpandedParent$ExpandedChildDelegate", DoNotGenerateAcw=true)]
			public partial class ExpandedChildDelegate : global::Com.Sas.IA.Android.Sdk.MRAIDWebView.BenignDelegate {
				static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDTwoPartExpandedParent$ExpandedChildDelegate", typeof (ExpandedChildDelegate));

				internal static new IntPtr class_ref {
					get { return _members.JniPeerType.PeerReference.Handle; }
				}

				[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
				[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
				public override global::Java.Interop.JniPeerMembers JniPeerMembers {
					get { return _members; }
				}

				[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
				[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
				protected override IntPtr ThresholdClass {
					get { return _members.JniPeerType.PeerReference.Handle; }
				}

				[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
				[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
				protected override global::System.Type ThresholdType {
					get { return _members.ManagedPeerType; }
				}

				protected ExpandedChildDelegate (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
				{
				}

			}

			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$MRAIDTwoPartExpandedParent", typeof (MRAIDTwoPartExpandedParent));

			internal static new IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected MRAIDTwoPartExpandedParent (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

			static Delegate? cb_getHostActivity;
#pragma warning disable 0169
			static Delegate GetGetHostActivityHandler ()
			{
				if (cb_getHostActivity == null)
					cb_getHostActivity = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetHostActivity));
				return cb_getHostActivity;
			}

			static IntPtr n_GetHostActivity (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDTwoPartExpandedParent> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.HostActivity);
			}
#pragma warning restore 0169

			public override unsafe global::Android.App.Activity? HostActivity {
				// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDTwoPartExpandedParent']/method[@name='getHostActivity' and count(parameter)=0]"
				[Register ("getHostActivity", "()Landroid/app/Activity;", "GetGetHostActivityHandler")]
				get {
					const string __id = "getHostActivity.()Landroid/app/Activity;";
					try {
						var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
						return global::Java.Lang.Object.GetObject<global::Android.App.Activity> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
					} finally {
					}
				}
			}

			static Delegate? cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
#pragma warning disable 0169
			static Delegate GetBeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler ()
			{
				if (cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ == null)
					cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_BeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_));
				return cb_beginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_;
			}

			static void n_BeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_ (IntPtr jnienv, IntPtr native__this, IntPtr native_formerState)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDTwoPartExpandedParent> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				var formerState = (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState?)global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (native_formerState, JniHandleOwnership.DoNotTransfer);
				__this.BeginFromState (formerState);
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDTwoPartExpandedParent']/method[@name='beginFromState' and count(parameter)=1 and parameter[1][@type='com.sas.ia.android.sdk.MRAIDWebView.MRAIDState']]"
			[Register ("beginFromState", "(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V", "GetBeginFromState_Lcom_sas_ia_android_sdk_MRAIDWebView_MRAIDState_Handler")]
			public virtual unsafe void BeginFromState (global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? formerState)
			{
				const string __id = "beginFromState.(Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue ((formerState == null) ? IntPtr.Zero : ((global::Java.Lang.Object) formerState).Handle);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
					global::System.GC.KeepAlive (formerState);
				}
			}

			static Delegate? cb_closeState;
#pragma warning disable 0169
			static Delegate GetCloseStateHandler ()
			{
				if (cb_closeState == null)
					cb_closeState = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_CloseState));
				return cb_closeState;
			}

			static IntPtr n_CloseState (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDTwoPartExpandedParent> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				return JNIEnv.ToLocalJniHandle (__this.CloseState ());
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDTwoPartExpandedParent']/method[@name='closeState' and count(parameter)=0]"
			[Register ("closeState", "()Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;", "GetCloseStateHandler")]
			protected override unsafe global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState? CloseState ()
			{
				const string __id = "closeState.()Lcom/sas/ia/android/sdk/MRAIDWebView$MRAIDState;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IMRAIDState> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}

			static Delegate? cb_doClose;
#pragma warning disable 0169
			static Delegate GetDoCloseHandler ()
			{
				if (cb_doClose == null)
					cb_doClose = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_DoClose));
				return cb_doClose;
			}

			static void n_DoClose (IntPtr jnienv, IntPtr native__this)
			{
				var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.MRAIDTwoPartExpandedParent> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
				__this.DoClose ();
			}
#pragma warning restore 0169

			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.MRAIDTwoPartExpandedParent']/method[@name='doClose' and count(parameter)=0]"
			[Register ("doClose", "()V", "GetDoCloseHandler")]
			protected override unsafe void DoClose ()
			{
				const string __id = "doClose.()V";
				try {
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
				} finally {
				}
			}

		}

		// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView.WatchableWebView']"
		[global::Android.Runtime.Register ("com/sas/ia/android/sdk/MRAIDWebView$WatchableWebView", DoNotGenerateAcw=true)]
		protected internal partial class WatchableWebView : global::Android.Webkit.WebView {
			static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView$WatchableWebView", typeof (WatchableWebView));

			internal static IntPtr class_ref {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			public override global::Java.Interop.JniPeerMembers JniPeerMembers {
				get { return _members; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override IntPtr ThresholdClass {
				get { return _members.JniPeerType.PeerReference.Handle; }
			}

			[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
			[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
			protected override global::System.Type ThresholdType {
				get { return _members.ManagedPeerType; }
			}

			protected WatchableWebView (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
			{
			}

		}

		static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/ia/android/sdk/MRAIDWebView", typeof (MRAIDWebView));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected MRAIDWebView (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/constructor[@name='MRAIDWebView' and count(parameter)=2 and parameter[1][@type='android.content.Context'] and parameter[2][@type='com.sas.ia.android.sdk.MRAIDWebView.Delegate']]"
		[Register (".ctor", "(Landroid/content/Context;Lcom/sas/ia/android/sdk/MRAIDWebView$Delegate;)V", "")]
		public unsafe MRAIDWebView (global::Android.Content.Context? context, global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IDelegate? @delegate) : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "(Landroid/content/Context;Lcom/sas/ia/android/sdk/MRAIDWebView$Delegate;)V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((context == null) ? IntPtr.Zero : ((global::Java.Lang.Object) context).Handle);
				__args [1] = new JniArgumentValue ((@delegate == null) ? IntPtr.Zero : ((global::Java.Lang.Object) @delegate).Handle);
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), __args);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (context);
				global::System.GC.KeepAlive (@delegate);
			}
		}

		static Delegate? cb_getActionActivity;
#pragma warning disable 0169
		static Delegate GetGetActionActivityHandler ()
		{
			if (cb_getActionActivity == null)
				cb_getActionActivity = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetActionActivity));
			return cb_getActionActivity;
		}

		static IntPtr n_GetActionActivity (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.ActionActivity);
		}
#pragma warning restore 0169

		public virtual unsafe global::Android.App.Activity? ActionActivity {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='getActionActivity' and count(parameter)=0]"
			[Register ("getActionActivity", "()Landroid/app/Activity;", "GetGetActionActivityHandler")]
			get {
				const string __id = "getActionActivity.()Landroid/app/Activity;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Android.App.Activity> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_isActionInBrowser;
#pragma warning disable 0169
		static Delegate GetIsActionInBrowserHandler ()
		{
			if (cb_isActionInBrowser == null)
				cb_isActionInBrowser = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsActionInBrowser));
			return cb_isActionInBrowser;
		}

		static bool n_IsActionInBrowser (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.ActionInBrowser;
		}
#pragma warning restore 0169

		static Delegate? cb_setActionInBrowser_Z;
#pragma warning disable 0169
		static Delegate GetSetActionInBrowser_ZHandler ()
		{
			if (cb_setActionInBrowser_Z == null)
				cb_setActionInBrowser_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetActionInBrowser_Z));
			return cb_setActionInBrowser_Z;
		}

		static void n_SetActionInBrowser_Z (IntPtr jnienv, IntPtr native__this, bool actionInBrowser)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.ActionInBrowser = actionInBrowser;
		}
#pragma warning restore 0169

		public virtual unsafe bool ActionInBrowser {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='isActionInBrowser' and count(parameter)=0]"
			[Register ("isActionInBrowser", "()Z", "GetIsActionInBrowserHandler")]
			get {
				const string __id = "isActionInBrowser.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='setActionInBrowser' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setActionInBrowser", "(Z)V", "GetSetActionInBrowser_ZHandler")]
			set {
				const string __id = "setActionInBrowser.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_getActivity;
#pragma warning disable 0169
		static Delegate GetGetActivityHandler ()
		{
			if (cb_getActivity == null)
				cb_getActivity = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetActivity));
			return cb_getActivity;
		}

		static IntPtr n_GetActivity (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Activity);
		}
#pragma warning restore 0169

		protected virtual unsafe global::Android.App.Activity? Activity {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='getActivity' and count(parameter)=0]"
			[Register ("getActivity", "()Landroid/app/Activity;", "GetGetActivityHandler")]
			get {
				const string __id = "getActivity.()Landroid/app/Activity;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Android.App.Activity> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_getDelegate;
#pragma warning disable 0169
		static Delegate GetGetDelegateHandler ()
		{
			if (cb_getDelegate == null)
				cb_getDelegate = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_GetDelegate));
			return cb_getDelegate;
		}

		static IntPtr n_GetDelegate (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.ToLocalJniHandle (__this.Delegate);
		}
#pragma warning restore 0169

		protected virtual unsafe global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IDelegate? Delegate {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='getDelegate' and count(parameter)=0]"
			[Register ("getDelegate", "()Lcom/sas/ia/android/sdk/MRAIDWebView$Delegate;", "GetGetDelegateHandler")]
			get {
				const string __id = "getDelegate.()Lcom/sas/ia/android/sdk/MRAIDWebView$Delegate;";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
					return global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView.IDelegate> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_isActionInProgress;
#pragma warning disable 0169
		static Delegate GetIsActionInProgressHandler ()
		{
			if (cb_isActionInProgress == null)
				cb_isActionInProgress = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsActionInProgress));
			return cb_isActionInProgress;
		}

		static bool n_IsActionInProgress (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsActionInProgress;
		}
#pragma warning restore 0169

		public virtual unsafe bool IsActionInProgress {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='isActionInProgress' and count(parameter)=0]"
			[Register ("isActionInProgress", "()Z", "GetIsActionInProgressHandler")]
			get {
				const string __id = "isActionInProgress.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_isWebViewInContainer;
#pragma warning disable 0169
		static Delegate GetIsWebViewInContainerHandler ()
		{
			if (cb_isWebViewInContainer == null)
				cb_isWebViewInContainer = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsWebViewInContainer));
			return cb_isWebViewInContainer;
		}

		static bool n_IsWebViewInContainer (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.IsWebViewInContainer;
		}
#pragma warning restore 0169

		protected virtual unsafe bool IsWebViewInContainer {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='isWebViewInContainer' and count(parameter)=0]"
			[Register ("isWebViewInContainer", "()Z", "GetIsWebViewInContainerHandler")]
			get {
				const string __id = "isWebViewInContainer.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
		}

		static Delegate? cb_cancelAction;
#pragma warning disable 0169
		static Delegate GetCancelActionHandler ()
		{
			if (cb_cancelAction == null)
				cb_cancelAction = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_CancelAction));
			return cb_cancelAction;
		}

		static void n_CancelAction (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.CancelAction ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='cancelAction' and count(parameter)=0]"
		[Register ("cancelAction", "()V", "GetCancelActionHandler")]
		public virtual unsafe void CancelAction ()
		{
			const string __id = "cancelAction.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_close;
#pragma warning disable 0169
		static Delegate GetCloseHandler ()
		{
			if (cb_close == null)
				cb_close = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Close));
			return cb_close;
		}

		static void n_Close (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Close ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='close' and count(parameter)=0]"
		[Register ("close", "()V", "GetCloseHandler")]
		public virtual unsafe void Close ()
		{
			const string __id = "close.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_executeJavaScript_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetExecuteJavaScript_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_executeJavaScript_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_executeJavaScript_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_L (n_ExecuteJavaScript_Ljava_lang_String_Ljava_lang_String_));
			return cb_executeJavaScript_Ljava_lang_String_Ljava_lang_String_;
		}

		static IntPtr n_ExecuteJavaScript_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_js, IntPtr native_jsStringExpression)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var js = JNIEnv.GetString (native_js, JniHandleOwnership.DoNotTransfer);
			var jsStringExpression = JNIEnv.GetString (native_jsStringExpression, JniHandleOwnership.DoNotTransfer);
			IntPtr __ret = JNIEnv.NewString (__this.ExecuteJavaScript (js, jsStringExpression));
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='executeJavaScript' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("executeJavaScript", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetExecuteJavaScript_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe string? ExecuteJavaScript (string? js, string? jsStringExpression)
		{
			const string __id = "executeJavaScript.(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;";
			IntPtr native_js = JNIEnv.NewString ((string?)js);
			IntPtr native_jsStringExpression = JNIEnv.NewString ((string?)jsStringExpression);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_js);
				__args [1] = new JniArgumentValue (native_jsStringExpression);
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, __args);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
				JNIEnv.DeleteLocalRef (native_js);
				JNIEnv.DeleteLocalRef (native_jsStringExpression);
			}
		}

		static Delegate? cb_expand_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetExpand_Ljava_lang_String_Handler ()
		{
			if (cb_expand_Ljava_lang_String_ == null)
				cb_expand_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Expand_Ljava_lang_String_));
			return cb_expand_Ljava_lang_String_;
		}

		static void n_Expand_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_url)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var url = JNIEnv.GetString (native_url, JniHandleOwnership.DoNotTransfer);
			__this.Expand (url);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='expand' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("expand", "(Ljava/lang/String;)V", "GetExpand_Ljava_lang_String_Handler")]
		protected virtual unsafe void Expand (string? url)
		{
			const string __id = "expand.(Ljava/lang/String;)V";
			IntPtr native_url = JNIEnv.NewString ((string?)url);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_url);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_url);
			}
		}

		static Delegate? cb_htmlContent;
#pragma warning disable 0169
		static Delegate GetHtmlContentHandler ()
		{
			if (cb_htmlContent == null)
				cb_htmlContent = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_L (n_HtmlContent));
			return cb_htmlContent;
		}

		static IntPtr n_HtmlContent (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return JNIEnv.NewString (__this.HtmlContent ());
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='htmlContent' and count(parameter)=0]"
		[Register ("htmlContent", "()Ljava/lang/String;", "GetHtmlContentHandler")]
		public virtual unsafe string? HtmlContent ()
		{
			const string __id = "htmlContent.()Ljava/lang/String;";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualObjectMethod (__id, this, null);
				return JNIEnv.GetString (__rm.Handle, JniHandleOwnership.TransferLocalRef);
			} finally {
			}
		}

		static Delegate? cb_load_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetLoad_Ljava_lang_String_Handler ()
		{
			if (cb_load_Ljava_lang_String_ == null)
				cb_load_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Load_Ljava_lang_String_));
			return cb_load_Ljava_lang_String_;
		}

		static void n_Load_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_url)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var url = JNIEnv.GetString (native_url, JniHandleOwnership.DoNotTransfer);
			__this.Load (url);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='load' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("load", "(Ljava/lang/String;)V", "GetLoad_Ljava_lang_String_Handler")]
		public virtual unsafe void Load (string? url)
		{
			const string __id = "load.(Ljava/lang/String;)V";
			IntPtr native_url = JNIEnv.NewString ((string?)url);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_url);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_url);
			}
		}

		static Delegate? cb_loadChildExpansion_Ljava_lang_String_Landroid_app_Activity_;
#pragma warning disable 0169
		static Delegate GetLoadChildExpansion_Ljava_lang_String_Landroid_app_Activity_Handler ()
		{
			if (cb_loadChildExpansion_Ljava_lang_String_Landroid_app_Activity_ == null)
				cb_loadChildExpansion_Ljava_lang_String_Landroid_app_Activity_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_LoadChildExpansion_Ljava_lang_String_Landroid_app_Activity_));
			return cb_loadChildExpansion_Ljava_lang_String_Landroid_app_Activity_;
		}

		static void n_LoadChildExpansion_Ljava_lang_String_Landroid_app_Activity_ (IntPtr jnienv, IntPtr native__this, IntPtr native_url, IntPtr native_hostActivity)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var url = JNIEnv.GetString (native_url, JniHandleOwnership.DoNotTransfer);
			var hostActivity = global::Java.Lang.Object.GetObject<global::Android.App.Activity> (native_hostActivity, JniHandleOwnership.DoNotTransfer);
			__this.LoadChildExpansion (url, hostActivity);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='loadChildExpansion' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='android.app.Activity']]"
		[Register ("loadChildExpansion", "(Ljava/lang/String;Landroid/app/Activity;)V", "GetLoadChildExpansion_Ljava_lang_String_Landroid_app_Activity_Handler")]
		protected virtual unsafe void LoadChildExpansion (string? url, global::Android.App.Activity? hostActivity)
		{
			const string __id = "loadChildExpansion.(Ljava/lang/String;Landroid/app/Activity;)V";
			IntPtr native_url = JNIEnv.NewString ((string?)url);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_url);
				__args [1] = new JniArgumentValue ((hostActivity == null) ? IntPtr.Zero : ((global::Java.Lang.Object) hostActivity).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_url);
				global::System.GC.KeepAlive (hostActivity);
			}
		}

		static Delegate? cb_mraidAdTrace_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetMraidAdTrace_Ljava_lang_String_Handler ()
		{
			if (cb_mraidAdTrace_Ljava_lang_String_ == null)
				cb_mraidAdTrace_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_MraidAdTrace_Ljava_lang_String_));
			return cb_mraidAdTrace_Ljava_lang_String_;
		}

		static void n_MraidAdTrace_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_message)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var message = JNIEnv.GetString (native_message, JniHandleOwnership.DoNotTransfer);
			__this.MraidAdTrace (message);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='mraidAdTrace' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("mraidAdTrace", "(Ljava/lang/String;)V", "GetMraidAdTrace_Ljava_lang_String_Handler")]
		protected virtual unsafe void MraidAdTrace (string? message)
		{
			const string __id = "mraidAdTrace.(Ljava/lang/String;)V";
			IntPtr native_message = JNIEnv.NewString ((string?)message);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_message);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_message);
			}
		}

		static Delegate? cb_mraidError_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetMraidError_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_mraidError_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_mraidError_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_MraidError_Ljava_lang_String_Ljava_lang_String_));
			return cb_mraidError_Ljava_lang_String_Ljava_lang_String_;
		}

		static void n_MraidError_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_mraidFunction, IntPtr native_message)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var mraidFunction = JNIEnv.GetString (native_mraidFunction, JniHandleOwnership.DoNotTransfer);
			var message = JNIEnv.GetString (native_message, JniHandleOwnership.DoNotTransfer);
			__this.MraidError (mraidFunction, message);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='mraidError' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("mraidError", "(Ljava/lang/String;Ljava/lang/String;)V", "GetMraidError_Ljava_lang_String_Ljava_lang_String_Handler")]
		public virtual unsafe void MraidError (string? mraidFunction, string? message)
		{
			const string __id = "mraidError.(Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_mraidFunction = JNIEnv.NewString ((string?)mraidFunction);
			IntPtr native_message = JNIEnv.NewString ((string?)message);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_mraidFunction);
				__args [1] = new JniArgumentValue (native_message);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_mraidFunction);
				JNIEnv.DeleteLocalRef (native_message);
			}
		}

		static Delegate? cb_mraidExecute_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetMraidExecute_Ljava_lang_String_Handler ()
		{
			if (cb_mraidExecute_Ljava_lang_String_ == null)
				cb_mraidExecute_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_MraidExecute_Ljava_lang_String_));
			return cb_mraidExecute_Ljava_lang_String_;
		}

		static void n_MraidExecute_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_functionCall)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var functionCall = JNIEnv.GetString (native_functionCall, JniHandleOwnership.DoNotTransfer);
			__this.MraidExecute (functionCall);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='mraidExecute' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("mraidExecute", "(Ljava/lang/String;)V", "GetMraidExecute_Ljava_lang_String_Handler")]
		protected virtual unsafe void MraidExecute (string? functionCall)
		{
			const string __id = "mraidExecute.(Ljava/lang/String;)V";
			IntPtr native_functionCall = JNIEnv.NewString ((string?)functionCall);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_functionCall);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_functionCall);
			}
		}

		static Delegate? cb_mraidExecute_Ljava_lang_String_Z;
#pragma warning disable 0169
		static Delegate GetMraidExecute_Ljava_lang_String_ZHandler ()
		{
			if (cb_mraidExecute_Ljava_lang_String_Z == null)
				cb_mraidExecute_Ljava_lang_String_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLZ_V (n_MraidExecute_Ljava_lang_String_Z));
			return cb_mraidExecute_Ljava_lang_String_Z;
		}

		static void n_MraidExecute_Ljava_lang_String_Z (IntPtr jnienv, IntPtr native__this, IntPtr native_functionCall, bool trace)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var functionCall = JNIEnv.GetString (native_functionCall, JniHandleOwnership.DoNotTransfer);
			__this.MraidExecute (functionCall, trace);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='mraidExecute' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='boolean']]"
		[Register ("mraidExecute", "(Ljava/lang/String;Z)V", "GetMraidExecute_Ljava_lang_String_ZHandler")]
		protected virtual unsafe void MraidExecute (string? functionCall, bool trace)
		{
			const string __id = "mraidExecute.(Ljava/lang/String;Z)V";
			IntPtr native_functionCall = JNIEnv.NewString ((string?)functionCall);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_functionCall);
				__args [1] = new JniArgumentValue (trace);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_functionCall);
			}
		}

		static Delegate? cb_mraidJsTrace_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetMraidJsTrace_Ljava_lang_String_Handler ()
		{
			if (cb_mraidJsTrace_Ljava_lang_String_ == null)
				cb_mraidJsTrace_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_MraidJsTrace_Ljava_lang_String_));
			return cb_mraidJsTrace_Ljava_lang_String_;
		}

		static void n_MraidJsTrace_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_message)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var message = JNIEnv.GetString (native_message, JniHandleOwnership.DoNotTransfer);
			__this.MraidJsTrace (message);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='mraidJsTrace' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("mraidJsTrace", "(Ljava/lang/String;)V", "GetMraidJsTrace_Ljava_lang_String_Handler")]
		protected virtual unsafe void MraidJsTrace (string? message)
		{
			const string __id = "mraidJsTrace.(Ljava/lang/String;)V";
			IntPtr native_message = JNIEnv.NewString ((string?)message);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_message);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_message);
			}
		}

		static Delegate? cb_mraidOrient;
#pragma warning disable 0169
		static Delegate GetMraidOrientHandler ()
		{
			if (cb_mraidOrient == null)
				cb_mraidOrient = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_MraidOrient));
			return cb_mraidOrient;
		}

		static void n_MraidOrient (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.MraidOrient ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='mraidOrient' and count(parameter)=0]"
		[Register ("mraidOrient", "()V", "GetMraidOrientHandler")]
		protected virtual unsafe void MraidOrient ()
		{
			const string __id = "mraidOrient.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_mraidSdkDone;
#pragma warning disable 0169
		static Delegate GetMraidSdkDoneHandler ()
		{
			if (cb_mraidSdkDone == null)
				cb_mraidSdkDone = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_MraidSdkDone));
			return cb_mraidSdkDone;
		}

		static void n_MraidSdkDone (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.MraidSdkDone ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='mraidSdkDone' and count(parameter)=0]"
		[Register ("mraidSdkDone", "()V", "GetMraidSdkDoneHandler")]
		protected virtual unsafe void MraidSdkDone ()
		{
			const string __id = "mraidSdkDone.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='mraidSdkError' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("mraidSdkError", "(Ljava/lang/String;)V", "")]
		protected unsafe void MraidSdkError (string? message)
		{
			const string __id = "mraidSdkError.(Ljava/lang/String;)V";
			IntPtr native_message = JNIEnv.NewString ((string?)message);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_message);
				_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_message);
			}
		}

		static Delegate? cb_mraidSdkReady;
#pragma warning disable 0169
		static Delegate GetMraidSdkReadyHandler ()
		{
			if (cb_mraidSdkReady == null)
				cb_mraidSdkReady = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_MraidSdkReady));
			return cb_mraidSdkReady;
		}

		static void n_MraidSdkReady (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.MraidSdkReady ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='mraidSdkReady' and count(parameter)=0]"
		[Register ("mraidSdkReady", "()V", "GetMraidSdkReadyHandler")]
		protected virtual unsafe void MraidSdkReady ()
		{
			const string __id = "mraidSdkReady.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_mraidSdkTrace_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetMraidSdkTrace_Ljava_lang_String_Handler ()
		{
			if (cb_mraidSdkTrace_Ljava_lang_String_ == null)
				cb_mraidSdkTrace_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_MraidSdkTrace_Ljava_lang_String_));
			return cb_mraidSdkTrace_Ljava_lang_String_;
		}

		static void n_MraidSdkTrace_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_message)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var message = JNIEnv.GetString (native_message, JniHandleOwnership.DoNotTransfer);
			__this.MraidSdkTrace (message);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='mraidSdkTrace' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("mraidSdkTrace", "(Ljava/lang/String;)V", "GetMraidSdkTrace_Ljava_lang_String_Handler")]
		protected virtual unsafe void MraidSdkTrace (string? message)
		{
			const string __id = "mraidSdkTrace.(Ljava/lang/String;)V";
			IntPtr native_message = JNIEnv.NewString ((string?)message);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_message);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_message);
			}
		}

		static Delegate? cb_mraidSetDefaultPosition;
#pragma warning disable 0169
		static Delegate GetMraidSetDefaultPositionHandler ()
		{
			if (cb_mraidSetDefaultPosition == null)
				cb_mraidSetDefaultPosition = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_MraidSetDefaultPosition));
			return cb_mraidSetDefaultPosition;
		}

		static void n_MraidSetDefaultPosition (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.MraidSetDefaultPosition ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='mraidSetDefaultPosition' and count(parameter)=0]"
		[Register ("mraidSetDefaultPosition", "()V", "GetMraidSetDefaultPositionHandler")]
		protected virtual unsafe void MraidSetDefaultPosition ()
		{
			const string __id = "mraidSetDefaultPosition.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_mraidSetPosition;
#pragma warning disable 0169
		static Delegate GetMraidSetPositionHandler ()
		{
			if (cb_mraidSetPosition == null)
				cb_mraidSetPosition = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_MraidSetPosition));
			return cb_mraidSetPosition;
		}

		static void n_MraidSetPosition (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.MraidSetPosition ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='mraidSetPosition' and count(parameter)=0]"
		[Register ("mraidSetPosition", "()V", "GetMraidSetPositionHandler")]
		protected virtual unsafe void MraidSetPosition ()
		{
			const string __id = "mraidSetPosition.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_mraidSetState;
#pragma warning disable 0169
		static Delegate GetMraidSetStateHandler ()
		{
			if (cb_mraidSetState == null)
				cb_mraidSetState = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_MraidSetState));
			return cb_mraidSetState;
		}

		static void n_MraidSetState (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.MraidSetState ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='mraidSetState' and count(parameter)=0]"
		[Register ("mraidSetState", "()V", "GetMraidSetStateHandler")]
		protected virtual unsafe void MraidSetState ()
		{
			const string __id = "mraidSetState.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_mraidSetTracing;
#pragma warning disable 0169
		static Delegate GetMraidSetTracingHandler ()
		{
			if (cb_mraidSetTracing == null)
				cb_mraidSetTracing = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_MraidSetTracing));
			return cb_mraidSetTracing;
		}

		static void n_MraidSetTracing (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.MraidSetTracing ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='mraidSetTracing' and count(parameter)=0]"
		[Register ("mraidSetTracing", "()V", "GetMraidSetTracingHandler")]
		public virtual unsafe void MraidSetTracing ()
		{
			const string __id = "mraidSetTracing.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_mraidSetVisibility;
#pragma warning disable 0169
		static Delegate GetMraidSetVisibilityHandler ()
		{
			if (cb_mraidSetVisibility == null)
				cb_mraidSetVisibility = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_MraidSetVisibility));
			return cb_mraidSetVisibility;
		}

		static void n_MraidSetVisibility (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.MraidSetVisibility ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='mraidSetVisibility' and count(parameter)=0]"
		[Register ("mraidSetVisibility", "()V", "GetMraidSetVisibilityHandler")]
		protected virtual unsafe void MraidSetVisibility ()
		{
			const string __id = "mraidSetVisibility.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_mraidTrace_Ljava_lang_String_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetMraidTrace_Ljava_lang_String_Ljava_lang_String_Handler ()
		{
			if (cb_mraidTrace_Ljava_lang_String_Ljava_lang_String_ == null)
				cb_mraidTrace_Ljava_lang_String_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_MraidTrace_Ljava_lang_String_Ljava_lang_String_));
			return cb_mraidTrace_Ljava_lang_String_Ljava_lang_String_;
		}

		static void n_MraidTrace_Ljava_lang_String_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_type, IntPtr native_message)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var type = JNIEnv.GetString (native_type, JniHandleOwnership.DoNotTransfer);
			var message = JNIEnv.GetString (native_message, JniHandleOwnership.DoNotTransfer);
			__this.MraidTrace (type, message);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='mraidTrace' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.lang.String']]"
		[Register ("mraidTrace", "(Ljava/lang/String;Ljava/lang/String;)V", "GetMraidTrace_Ljava_lang_String_Ljava_lang_String_Handler")]
		protected virtual unsafe void MraidTrace (string? type, string? message)
		{
			const string __id = "mraidTrace.(Ljava/lang/String;Ljava/lang/String;)V";
			IntPtr native_type = JNIEnv.NewString ((string?)type);
			IntPtr native_message = JNIEnv.NewString ((string?)message);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_type);
				__args [1] = new JniArgumentValue (native_message);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_type);
				JNIEnv.DeleteLocalRef (native_message);
			}
		}

		static Delegate? cb_onVisibilityChange_Z;
#pragma warning disable 0169
		static Delegate GetOnVisibilityChange_ZHandler ()
		{
			if (cb_onVisibilityChange_Z == null)
				cb_onVisibilityChange_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_OnVisibilityChange_Z));
			return cb_onVisibilityChange_Z;
		}

		static void n_OnVisibilityChange_Z (IntPtr jnienv, IntPtr native__this, bool newVisible)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.OnVisibilityChange (newVisible);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='onVisibilityChange' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("onVisibilityChange", "(Z)V", "GetOnVisibilityChange_ZHandler")]
		public virtual unsafe void OnVisibilityChange (bool newVisible)
		{
			const string __id = "onVisibilityChange.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (newVisible);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_open_Ljava_lang_String_;
#pragma warning disable 0169
		static Delegate GetOpen_Ljava_lang_String_Handler ()
		{
			if (cb_open_Ljava_lang_String_ == null)
				cb_open_Ljava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_Open_Ljava_lang_String_));
			return cb_open_Ljava_lang_String_;
		}

		static void n_Open_Ljava_lang_String_ (IntPtr jnienv, IntPtr native__this, IntPtr native_url)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var url = JNIEnv.GetString (native_url, JniHandleOwnership.DoNotTransfer);
			__this.Open (url);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='open' and count(parameter)=1 and parameter[1][@type='java.lang.String']]"
		[Register ("open", "(Ljava/lang/String;)V", "GetOpen_Ljava_lang_String_Handler")]
		public virtual unsafe void Open (string? url)
		{
			const string __id = "open.(Ljava/lang/String;)V";
			IntPtr native_url = JNIEnv.NewString ((string?)url);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_url);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_url);
			}
		}

		static Delegate? cb_processMraidCommand_Ljava_lang_String_Ljava_util_List_;
#pragma warning disable 0169
		static Delegate GetProcessMraidCommand_Ljava_lang_String_Ljava_util_List_Handler ()
		{
			if (cb_processMraidCommand_Ljava_lang_String_Ljava_util_List_ == null)
				cb_processMraidCommand_Ljava_lang_String_Ljava_util_List_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_ProcessMraidCommand_Ljava_lang_String_Ljava_util_List_));
			return cb_processMraidCommand_Ljava_lang_String_Ljava_util_List_;
		}

		static void n_ProcessMraidCommand_Ljava_lang_String_Ljava_util_List_ (IntPtr jnienv, IntPtr native__this, IntPtr native_command, IntPtr native_parameters)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var command = JNIEnv.GetString (native_command, JniHandleOwnership.DoNotTransfer);
			var parameters = global::Android.Runtime.JavaList<string>.FromJniHandle (native_parameters, JniHandleOwnership.DoNotTransfer);
			__this.ProcessMraidCommand (command, parameters);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='processMraidCommand' and count(parameter)=2 and parameter[1][@type='java.lang.String'] and parameter[2][@type='java.util.List&lt;java.lang.String&gt;']]"
		[Register ("processMraidCommand", "(Ljava/lang/String;Ljava/util/List;)V", "GetProcessMraidCommand_Ljava_lang_String_Ljava_util_List_Handler")]
		protected virtual unsafe void ProcessMraidCommand (string? command, global::System.Collections.Generic.IList<string>? parameters)
		{
			const string __id = "processMraidCommand.(Ljava/lang/String;Ljava/util/List;)V";
			IntPtr native_command = JNIEnv.NewString ((string?)command);
			IntPtr native_parameters = global::Android.Runtime.JavaList<string>.ToLocalJniHandle (parameters);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_command);
				__args [1] = new JniArgumentValue (native_parameters);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_command);
				JNIEnv.DeleteLocalRef (native_parameters);
				global::System.GC.KeepAlive (parameters);
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='removeWebViewFromParent' and count(parameter)=0]"
		[Register ("removeWebViewFromParent", "()V", "")]
		protected unsafe void RemoveWebViewFromParent ()
		{
			const string __id = "removeWebViewFromParent.()V";
			try {
				_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_resize;
#pragma warning disable 0169
		static Delegate GetResizeHandler ()
		{
			if (cb_resize == null)
				cb_resize = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Resize));
			return cb_resize;
		}

		static void n_Resize (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Resize ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='resize' and count(parameter)=0]"
		[Register ("resize", "()V", "GetResizeHandler")]
		protected virtual unsafe void Resize ()
		{
			const string __id = "resize.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='returnWebViewToContainer' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("returnWebViewToContainer", "(Z)V", "")]
		protected unsafe void ReturnWebViewToContainer (bool resetLayoutParams)
		{
			const string __id = "returnWebViewToContainer.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (resetLayoutParams);
				_members.InstanceMethods.InvokeNonvirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setScale_I;
#pragma warning disable 0169
		static Delegate GetSetScale_IHandler ()
		{
			if (cb_setScale_I == null)
				cb_setScale_I = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPI_V (n_SetScale_I));
			return cb_setScale_I;
		}

		static void n_SetScale_I (IntPtr jnienv, IntPtr native__this, int scale)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetScale (scale);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='setScale' and count(parameter)=1 and parameter[1][@type='int']]"
		[Register ("setScale", "(I)V", "GetSetScale_IHandler")]
		public virtual unsafe void SetScale (int scale)
		{
			const string __id = "setScale.(I)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (scale);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setUseCustomClose_Z;
#pragma warning disable 0169
		static Delegate GetSetUseCustomClose_ZHandler ()
		{
			if (cb_setUseCustomClose_Z == null)
				cb_setUseCustomClose_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetUseCustomClose_Z));
			return cb_setUseCustomClose_Z;
		}

		static void n_SetUseCustomClose_Z (IntPtr jnienv, IntPtr native__this, bool useCustomClose)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.SetUseCustomClose (useCustomClose);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='setUseCustomClose' and count(parameter)=1 and parameter[1][@type='boolean']]"
		[Register ("setUseCustomClose", "(Z)V", "GetSetUseCustomClose_ZHandler")]
		protected virtual unsafe void SetUseCustomClose (bool useCustomClose)
		{
			const string __id = "setUseCustomClose.(Z)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (useCustomClose);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
			}
		}

		static Delegate? cb_setupUseLocalResources_ZLjava_lang_String_;
#pragma warning disable 0169
		static Delegate GetSetupUseLocalResources_ZLjava_lang_String_Handler ()
		{
			if (cb_setupUseLocalResources_ZLjava_lang_String_ == null)
				cb_setupUseLocalResources_ZLjava_lang_String_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZL_V (n_SetupUseLocalResources_ZLjava_lang_String_));
			return cb_setupUseLocalResources_ZLjava_lang_String_;
		}

		static void n_SetupUseLocalResources_ZLjava_lang_String_ (IntPtr jnienv, IntPtr native__this, bool isUseLocalResources, IntPtr native_localResourcesPath)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var localResourcesPath = JNIEnv.GetString (native_localResourcesPath, JniHandleOwnership.DoNotTransfer);
			__this.SetupUseLocalResources (isUseLocalResources, localResourcesPath);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='setupUseLocalResources' and count(parameter)=2 and parameter[1][@type='boolean'] and parameter[2][@type='java.lang.String']]"
		[Register ("setupUseLocalResources", "(ZLjava/lang/String;)V", "GetSetupUseLocalResources_ZLjava_lang_String_Handler")]
		public virtual unsafe void SetupUseLocalResources (bool isUseLocalResources, string? localResourcesPath)
		{
			const string __id = "setupUseLocalResources.(ZLjava/lang/String;)V";
			IntPtr native_localResourcesPath = JNIEnv.NewString ((string?)localResourcesPath);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (isUseLocalResources);
				__args [1] = new JniArgumentValue (native_localResourcesPath);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_localResourcesPath);
			}
		}

		static Delegate? cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_;
#pragma warning disable 0169
		static Delegate GetShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_Handler ()
		{
			if (cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_ == null)
				cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_ShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_));
			return cb_showInterstitially_Landroid_app_Activity_Ljava_lang_Object_;
		}

		static void n_ShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_ (IntPtr jnienv, IntPtr native__this, IntPtr native_hostActivity, IntPtr native_strongReference)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.IA.Android.Sdk.MRAIDWebView> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var hostActivity = global::Java.Lang.Object.GetObject<global::Android.App.Activity> (native_hostActivity, JniHandleOwnership.DoNotTransfer);
			var strongReference = global::Java.Lang.Object.GetObject<global::Java.Lang.Object> (native_strongReference, JniHandleOwnership.DoNotTransfer);
			__this.ShowInterstitially (hostActivity, strongReference);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.ia.android.sdk']/class[@name='MRAIDWebView']/method[@name='showInterstitially' and count(parameter)=2 and parameter[1][@type='android.app.Activity'] and parameter[2][@type='java.lang.Object']]"
		[Register ("showInterstitially", "(Landroid/app/Activity;Ljava/lang/Object;)V", "GetShowInterstitially_Landroid_app_Activity_Ljava_lang_Object_Handler")]
		public virtual unsafe void ShowInterstitially (global::Android.App.Activity? hostActivity, global::Java.Lang.Object? strongReference)
		{
			const string __id = "showInterstitially.(Landroid/app/Activity;Ljava/lang/Object;)V";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue ((hostActivity == null) ? IntPtr.Zero : ((global::Java.Lang.Object) hostActivity).Handle);
				__args [1] = new JniArgumentValue ((strongReference == null) ? IntPtr.Zero : ((global::Java.Lang.Object) strongReference).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				global::System.GC.KeepAlive (hostActivity);
				global::System.GC.KeepAlive (strongReference);
			}
		}

	}
}
