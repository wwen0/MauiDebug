//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Sas.Mkt.Mobile.Sdk.Offline {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.sas.mkt.mobile.sdk.offline']/class[@name='OfflineEventManager']"
	[global::Android.Runtime.Register ("com/sas/mkt/mobile/sdk/offline/OfflineEventManager", DoNotGenerateAcw=true)]
	public partial class OfflineEventManager : global::Java.Lang.Object, global::Com.Sas.Mkt.Mobile.Sdk.Tasks.PostEventsTask.IResultHandler, global::Java.Lang.IRunnable {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/sas/mkt/mobile/sdk/offline/OfflineEventManager", typeof (OfflineEventManager));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected OfflineEventManager (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		public static unsafe global::Com.Sas.Mkt.Mobile.Sdk.Offline.OfflineEventManager? Instance {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk.offline']/class[@name='OfflineEventManager']/method[@name='getInstance' and count(parameter)=0]"
			[Register ("getInstance", "()Lcom/sas/mkt/mobile/sdk/offline/OfflineEventManager;", "")]
			get {
				const string __id = "getInstance.()Lcom/sas/mkt/mobile/sdk/offline/OfflineEventManager;";
				try {
					var __rm = _members.StaticMethods.InvokeObjectMethod (__id, null);
					return global::Java.Lang.Object.GetObject<global::Com.Sas.Mkt.Mobile.Sdk.Offline.OfflineEventManager> (__rm.Handle, JniHandleOwnership.TransferLocalRef);
				} finally {
				}
			}
		}

		static Delegate? cb_isRunning;
#pragma warning disable 0169
		static Delegate GetIsRunningHandler ()
		{
			if (cb_isRunning == null)
				cb_isRunning = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_IsRunning));
			return cb_isRunning;
		}

		static bool n_IsRunning (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.Mkt.Mobile.Sdk.Offline.OfflineEventManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Running;
		}
#pragma warning restore 0169

		static Delegate? cb_setRunning_Z;
#pragma warning disable 0169
		static Delegate GetSetRunning_ZHandler ()
		{
			if (cb_setRunning_Z == null)
				cb_setRunning_Z = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPZ_V (n_SetRunning_Z));
			return cb_setRunning_Z;
		}

		static void n_SetRunning_Z (IntPtr jnienv, IntPtr native__this, bool value)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.Mkt.Mobile.Sdk.Offline.OfflineEventManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Running = value;
		}
#pragma warning restore 0169

		public virtual unsafe bool Running {
			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk.offline']/class[@name='OfflineEventManager']/method[@name='isRunning' and count(parameter)=0]"
			[Register ("isRunning", "()Z", "GetIsRunningHandler")]
			get {
				const string __id = "isRunning.()Z";
				try {
					var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
					return __rm;
				} finally {
				}
			}
			// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk.offline']/class[@name='OfflineEventManager']/method[@name='setRunning' and count(parameter)=1 and parameter[1][@type='boolean']]"
			[Register ("setRunning", "(Z)V", "GetSetRunning_ZHandler")]
			set {
				const string __id = "setRunning.(Z)V";
				try {
					JniArgumentValue* __args = stackalloc JniArgumentValue [1];
					__args [0] = new JniArgumentValue (value);
					_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
				} finally {
				}
			}
		}

		static Delegate? cb_handleFailure_Ljava_util_List_Ljava_lang_Exception_;
#pragma warning disable 0169
		static Delegate GetHandleFailure_Ljava_util_List_Ljava_lang_Exception_Handler ()
		{
			if (cb_handleFailure_Ljava_util_List_Ljava_lang_Exception_ == null)
				cb_handleFailure_Ljava_util_List_Ljava_lang_Exception_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPLL_V (n_HandleFailure_Ljava_util_List_Ljava_lang_Exception_));
			return cb_handleFailure_Ljava_util_List_Ljava_lang_Exception_;
		}

		static void n_HandleFailure_Ljava_util_List_Ljava_lang_Exception_ (IntPtr jnienv, IntPtr native__this, IntPtr native_failedEvents, IntPtr native_exception)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.Mkt.Mobile.Sdk.Offline.OfflineEventManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var failedEvents = global::Android.Runtime.JavaList<global::Com.Sas.Mkt.Mobile.Sdk.Domain.MobileEvent>.FromJniHandle (native_failedEvents, JniHandleOwnership.DoNotTransfer);
			var exception = global::Java.Lang.Object.GetObject<global::Java.Lang.Exception> (native_exception, JniHandleOwnership.DoNotTransfer);
			__this.HandleFailure (failedEvents, exception);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk.offline']/class[@name='OfflineEventManager']/method[@name='handleFailure' and count(parameter)=2 and parameter[1][@type='java.util.List&lt;com.sas.mkt.mobile.sdk.domain.MobileEvent&gt;'] and parameter[2][@type='java.lang.Exception']]"
		[Register ("handleFailure", "(Ljava/util/List;Ljava/lang/Exception;)V", "GetHandleFailure_Ljava_util_List_Ljava_lang_Exception_Handler")]
		public virtual unsafe void HandleFailure (global::System.Collections.Generic.IList<global::Com.Sas.Mkt.Mobile.Sdk.Domain.MobileEvent>? failedEvents, global::Java.Lang.Exception? exception)
		{
			const string __id = "handleFailure.(Ljava/util/List;Ljava/lang/Exception;)V";
			IntPtr native_failedEvents = global::Android.Runtime.JavaList<global::Com.Sas.Mkt.Mobile.Sdk.Domain.MobileEvent>.ToLocalJniHandle (failedEvents);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (native_failedEvents);
				__args [1] = new JniArgumentValue ((exception == null) ? IntPtr.Zero : ((global::Java.Lang.Throwable) exception).Handle);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_failedEvents);
				global::System.GC.KeepAlive (failedEvents);
				global::System.GC.KeepAlive (exception);
			}
		}

		static Delegate? cb_handleSuccess_Ljava_util_List_;
#pragma warning disable 0169
		static Delegate GetHandleSuccess_Ljava_util_List_Handler ()
		{
			if (cb_handleSuccess_Ljava_util_List_ == null)
				cb_handleSuccess_Ljava_util_List_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_V (n_HandleSuccess_Ljava_util_List_));
			return cb_handleSuccess_Ljava_util_List_;
		}

		static void n_HandleSuccess_Ljava_util_List_ (IntPtr jnienv, IntPtr native__this, IntPtr native_successfulEvents)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.Mkt.Mobile.Sdk.Offline.OfflineEventManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var successfulEvents = global::Android.Runtime.JavaList<global::Com.Sas.Mkt.Mobile.Sdk.Domain.MobileEvent>.FromJniHandle (native_successfulEvents, JniHandleOwnership.DoNotTransfer);
			__this.HandleSuccess (successfulEvents);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk.offline']/class[@name='OfflineEventManager']/method[@name='handleSuccess' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;com.sas.mkt.mobile.sdk.domain.MobileEvent&gt;']]"
		[Register ("handleSuccess", "(Ljava/util/List;)V", "GetHandleSuccess_Ljava_util_List_Handler")]
		public virtual unsafe void HandleSuccess (global::System.Collections.Generic.IList<global::Com.Sas.Mkt.Mobile.Sdk.Domain.MobileEvent>? successfulEvents)
		{
			const string __id = "handleSuccess.(Ljava/util/List;)V";
			IntPtr native_successfulEvents = global::Android.Runtime.JavaList<global::Com.Sas.Mkt.Mobile.Sdk.Domain.MobileEvent>.ToLocalJniHandle (successfulEvents);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_successfulEvents);
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, __args);
			} finally {
				JNIEnv.DeleteLocalRef (native_successfulEvents);
				global::System.GC.KeepAlive (successfulEvents);
			}
		}

		static Delegate? cb_peek;
#pragma warning disable 0169
		static Delegate GetPeekHandler ()
		{
			if (cb_peek == null)
				cb_peek = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_I (n_Peek));
			return cb_peek;
		}

		static int n_Peek (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.Mkt.Mobile.Sdk.Offline.OfflineEventManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Peek ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk.offline']/class[@name='OfflineEventManager']/method[@name='peek' and count(parameter)=0]"
		[Register ("peek", "()I", "GetPeekHandler")]
		public virtual unsafe int Peek ()
		{
			const string __id = "peek.()I";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_push_Ljava_util_List_;
#pragma warning disable 0169
		static Delegate GetPush_Ljava_util_List_Handler ()
		{
			if (cb_push_Ljava_util_List_ == null)
				cb_push_Ljava_util_List_ = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPL_Z (n_Push_Ljava_util_List_));
			return cb_push_Ljava_util_List_;
		}

		static bool n_Push_Ljava_util_List_ (IntPtr jnienv, IntPtr native__this, IntPtr native_events)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.Mkt.Mobile.Sdk.Offline.OfflineEventManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			var events = global::Android.Runtime.JavaList<global::Com.Sas.Mkt.Mobile.Sdk.Domain.MobileEvent>.FromJniHandle (native_events, JniHandleOwnership.DoNotTransfer);
			bool __ret = __this.Push (events);
			return __ret;
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk.offline']/class[@name='OfflineEventManager']/method[@name='push' and count(parameter)=1 and parameter[1][@type='java.util.List&lt;com.sas.mkt.mobile.sdk.domain.MobileEvent&gt;']]"
		[Register ("push", "(Ljava/util/List;)Z", "GetPush_Ljava_util_List_Handler")]
		public virtual unsafe bool Push (global::System.Collections.Generic.IList<global::Com.Sas.Mkt.Mobile.Sdk.Domain.MobileEvent>? events)
		{
			const string __id = "push.(Ljava/util/List;)Z";
			IntPtr native_events = global::Android.Runtime.JavaList<global::Com.Sas.Mkt.Mobile.Sdk.Domain.MobileEvent>.ToLocalJniHandle (events);
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (native_events);
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, __args);
				return __rm;
			} finally {
				JNIEnv.DeleteLocalRef (native_events);
				global::System.GC.KeepAlive (events);
			}
		}

		static Delegate? cb_run;
#pragma warning disable 0169
		static Delegate GetRunHandler ()
		{
			if (cb_run == null)
				cb_run = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Run));
			return cb_run;
		}

		static void n_Run (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.Mkt.Mobile.Sdk.Offline.OfflineEventManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Run ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk.offline']/class[@name='OfflineEventManager']/method[@name='run' and count(parameter)=0]"
		[Register ("run", "()V", "GetRunHandler")]
		public virtual unsafe void Run ()
		{
			const string __id = "run.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_runOnce;
#pragma warning disable 0169
		static Delegate GetRunOnceHandler ()
		{
			if (cb_runOnce == null)
				cb_runOnce = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_Z (n_RunOnce));
			return cb_runOnce;
		}

		static bool n_RunOnce (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.Mkt.Mobile.Sdk.Offline.OfflineEventManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.RunOnce ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk.offline']/class[@name='OfflineEventManager']/method[@name='runOnce' and count(parameter)=0]"
		[Register ("runOnce", "()Z", "GetRunOnceHandler")]
		public virtual unsafe bool RunOnce ()
		{
			const string __id = "runOnce.()Z";
			try {
				var __rm = _members.InstanceMethods.InvokeVirtualBooleanMethod (__id, this, null);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_stop;
#pragma warning disable 0169
		static Delegate GetStopHandler ()
		{
			if (cb_stop == null)
				cb_stop = JNINativeWrapper.CreateDelegate (new _JniMarshal_PP_V (n_Stop));
			return cb_stop;
		}

		static void n_Stop (IntPtr jnienv, IntPtr native__this)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Sas.Mkt.Mobile.Sdk.Offline.OfflineEventManager> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			__this.Stop ();
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.sas.mkt.mobile.sdk.offline']/class[@name='OfflineEventManager']/method[@name='stop' and count(parameter)=0]"
		[Register ("stop", "()V", "GetStopHandler")]
		public virtual unsafe void Stop ()
		{
			const string __id = "stop.()V";
			try {
				_members.InstanceMethods.InvokeVirtualVoidMethod (__id, this, null);
			} finally {
			}
		}

	}
}
